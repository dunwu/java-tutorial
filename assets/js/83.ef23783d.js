(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{445:function(e,r,a){"use strict";a.r(r);var s=a(14),o=Object(s.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"spring-国际化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring-国际化"}},[e._v("#")]),e._v(" Spring 国际化")]),e._v(" "),r("h2",{attrs:{id:"spring-国际化使用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring-国际化使用场景"}},[e._v("#")]),e._v(" Spring 国际化使用场景")]),e._v(" "),r("ul",[r("li",[e._v("普通国际化文案")]),e._v(" "),r("li",[e._v("Bean Validation 校验国际化文案")]),e._v(" "),r("li",[e._v("Web 站点页面渲染")]),e._v(" "),r("li",[e._v("Web MVC 错误消息提示")])]),e._v(" "),r("h2",{attrs:{id:"spring-国际化接口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring-国际化接口"}},[e._v("#")]),e._v(" Spring 国际化接口")]),e._v(" "),r("ul",[r("li",[e._v("核心接口："),r("code",[e._v("org.springframework.context.MessageSource")])]),e._v(" "),r("li",[e._v("主要概念\n"),r("ul",[r("li",[e._v("文案模板编码（code）")]),e._v(" "),r("li",[e._v("文案模板参数（args）")]),e._v(" "),r("li",[e._v("区域（Locale）")])])])]),e._v(" "),r("h2",{attrs:{id:"层次性-messagesource"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#层次性-messagesource"}},[e._v("#")]),e._v(" 层次性 MessageSource")]),e._v(" "),r("ul",[r("li",[e._v("Spring 层次性接口回顾\n"),r("ul",[r("li",[r("code",[e._v("org.springframework.beans.factory.HierarchicalBeanFactory")])]),e._v(" "),r("li",[r("code",[e._v("org.springframework.context.ApplicationContext")])]),e._v(" "),r("li",[r("code",[e._v("org.springframework.beans.factory.config.BeanDefinition")])])])]),e._v(" "),r("li",[e._v("Spring 层次性国际化接口\n"),r("ul",[r("li",[r("code",[e._v("org.springframework.context.HierarchicalMessageSource")])])])])]),e._v(" "),r("h2",{attrs:{id:"java-国际化标准实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#java-国际化标准实现"}},[e._v("#")]),e._v(" Java 国际化标准实现")]),e._v(" "),r("p",[e._v("核心接口：")]),e._v(" "),r("ul",[r("li",[e._v("抽象实现 - "),r("code",[e._v("java.util.ResourceBundle")])]),e._v(" "),r("li",[e._v("Properties 资源实现 - "),r("code",[e._v("java.util.PropertyResourceBundle")])]),e._v(" "),r("li",[e._v("例举实现 - "),r("code",[e._v("java.util.ListResourceBundle")])])]),e._v(" "),r("p",[r("code",[e._v("ResourceBundle")]),e._v(" 核心特性")]),e._v(" "),r("ul",[r("li",[e._v("Key-Value 设计")]),e._v(" "),r("li",[e._v("层次性设计")]),e._v(" "),r("li",[e._v("缓存设计")]),e._v(" "),r("li",[e._v("字符编码控制 - "),r("code",[e._v("java.util.ResourceBundle.Control")]),e._v("（@since 1.6）")]),e._v(" "),r("li",[e._v("Control SPI 扩展 - "),r("code",[e._v("java.util.spi.ResourceBundleControlProvider")]),e._v("（@since 1.8）")])]),e._v(" "),r("h2",{attrs:{id:"java-文本格式化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#java-文本格式化"}},[e._v("#")]),e._v(" Java 文本格式化")]),e._v(" "),r("ul",[r("li",[e._v("核心接口\n"),r("ul",[r("li",[e._v("java.text.MessageFormat")])])]),e._v(" "),r("li",[e._v("基本用法\n"),r("ul",[r("li",[e._v("设置消息格式模式- new MessageFormat(...)")]),e._v(" "),r("li",[e._v("格式化 - format(new Object[]{...})")])])]),e._v(" "),r("li",[e._v("消息格式模式\n"),r("ul",[r("li",[e._v("格式元素：{ArgumentIndex (,FormatType,(FormatStyle))}")]),e._v(" "),r("li",[e._v("FormatType：消息格式类型，可选项，每种类型在 number、date、time 和 choice 类型选其一")]),e._v(" "),r("li",[e._v("FormatStyle：消息格式风格，可选项，包括：short、medium、long、full、integer、currency、\npercent")])])]),e._v(" "),r("li",[e._v("高级特性\n"),r("ul",[r("li",[e._v("重置消息格式模式")]),e._v(" "),r("li",[e._v("重置 java.util.Locale")]),e._v(" "),r("li",[e._v("重置 java.text.Format")])])])]),e._v(" "),r("h2",{attrs:{id:"messagesource-开箱即用实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#messagesource-开箱即用实现"}},[e._v("#")]),e._v(" MessageSource 开箱即用实现")]),e._v(" "),r("ul",[r("li",[e._v("基于 ResourceBundle + MessageFormat 组合 MessageSource 实现")]),e._v(" "),r("li",[e._v("org.springframework.context.support.ResourceBundleMessageSource")]),e._v(" "),r("li",[e._v("可重载 Properties + MessageFormat 组合 MessageSource 实现")]),e._v(" "),r("li",[e._v("org.springframework.context.support.ReloadableResourceBundleMessageSource")])]),e._v(" "),r("h2",{attrs:{id:"messagesource-內建依赖"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#messagesource-內建依赖"}},[e._v("#")]),e._v(" MessageSource 內建依赖")]),e._v(" "),r("ul",[r("li",[e._v("MessageSource 內建 Bean 可能来源")]),e._v(" "),r("li",[e._v("预注册 Bean 名称为：“messageSource”，类型为：MessageSource Bean")]),e._v(" "),r("li",[e._v("默认內建实现 - DelegatingMessageSource")]),e._v(" "),r("li",[e._v("层次性查找 MessageSource 对象")])]),e._v(" "),r("h2",{attrs:{id:"问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[e._v("#")]),e._v(" 问题")]),e._v(" "),r("p",[r("strong",[e._v("Spring Boot 为什么要新建 MessageSource Bean")]),e._v("？")]),e._v(" "),r("ul",[r("li",[e._v("AbstractApplicationContext 的实现决定了 MessageSource 內建实现")]),e._v(" "),r("li",[e._v("Spring Boot 通过外部化配置简化 MessageSource Bean 构建")]),e._v(" "),r("li",[e._v("Spring Boot 基于 Bean Validation 校验非常普遍")])]),e._v(" "),r("p",[r("strong",[e._v("Spring 国际化接口有哪些")]),e._v("？")]),e._v(" "),r("ul",[r("li",[e._v("核心接口 - MessageSource")]),e._v(" "),r("li",[e._v("层次性接口 - "),r("code",[e._v("org.springframework.context.HierarchicalMessageSource")])])]),e._v(" "),r("p",[r("strong",[e._v("Spring 有哪些 MessageSource 內建实现")]),e._v("？")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("org.springframework.context.support.ResourceBundleMessageSource")])]),e._v(" "),r("li",[r("code",[e._v("org.springframework.context.support.ReloadableResourceBundleMessageSource")])]),e._v(" "),r("li",[r("code",[e._v("org.springframework.context.support.StaticMessageSource")])]),e._v(" "),r("li",[r("code",[e._v("org.springframework.context.support.DelegatingMessageSource")])])]),e._v(" "),r("p",[r("strong",[e._v("如何实现配置自动更新 MessageSource")]),e._v("？")]),e._v(" "),r("p",[e._v("主要技术")]),e._v(" "),r("ul",[r("li",[e._v("Java NIO 2："),r("code",[e._v("java.nio.file.WatchService")])]),e._v(" "),r("li",[e._v("Java Concurrency : "),r("code",[e._v("java.util.concurrent.ExecutorService")])]),e._v(" "),r("li",[e._v("Spring："),r("code",[e._v("org.springframework.context.support.AbstractMessageSource")])])]),e._v(" "),r("h2",{attrs:{id:"参考资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[e._v("#")]),e._v(" 参考资料")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans",target:"_blank",rel:"noopener noreferrer"}},[e._v("Spring 官方文档之 Core Technologies"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://time.geekbang.org/course/intro/265",target:"_blank",rel:"noopener noreferrer"}},[e._v("《小马哥讲 Spring 核心编程思想》"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=o.exports}}]);