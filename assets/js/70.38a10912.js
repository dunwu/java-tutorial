(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{433:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"spring-依赖注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-依赖注入"}},[t._v("#")]),t._v(" Spring 依赖注入")]),t._v(" "),a("p",[t._v("DI，是 Dependency Injection 的缩写，即依赖注入。依赖注入是 IoC 的最常见形式。依赖注入是手动或自动绑定的方式，无需依赖特定的容器或 API。")]),t._v(" "),a("p",[t._v("依赖注入 (Dependency Injection，简称 DI) 是一个过程，其中对象仅通过构造函数参数、工厂方法的参数或对象实例在构造或从工厂方法返回。然后容器在创建 bean 时注入这些依赖项。这个过程基本上是 bean 本身的逆过程（因此得名，控制反转），它通过使用类的直接构造或服务定位器模式自行控制其依赖项的实例化或位置。")]),t._v(" "),a("p",[t._v("使用 DI，代码更干净，当对象具有依赖关系时，解耦更有效。对象不查找其依赖项，也不知道依赖项的位置或类别。结果，您的类变得更容易测试，特别是当依赖关系在接口或抽象基类上时，它们允许在单元测试中使用存根或模拟实现。")]),t._v(" "),a("p",[a("strong",[t._v("容器全权负责组件的装配，它会把符合依赖关系的对象通过 JavaBean 属性或者构造函数传递给需要的对象")]),t._v("。")]),t._v(" "),a("p",[t._v("DI 是组件之间依赖关系由容器在运行期决定，形象的说，即由容器动态的将某个依赖关系注入到组件之中。依赖注入的目的并非为软件系统带来更多功能，而是为了提升组件重用的频率，并为系统搭建一个灵活、可扩展的平台。通过依赖注入机制，我们只需要通过简单的配置，而无需任何代码就可指定目标需要的资源，完成自身的业务逻辑，而不需要关心具体的资源来自何处，由谁实现。")]),t._v(" "),a("p",[t._v("理解 DI 的关键是：“谁依赖谁，为什么需要依赖，谁注入谁，注入了什么”，那我们来深入分析一下：")]),t._v(" "),a("ul",[a("li",[t._v("**谁依赖于谁：**当然是应用程序依赖于 IoC 容器；")]),t._v(" "),a("li",[t._v("**为什么需要依赖：**应用程序需要 IoC 容器来提供对象需要的外部资源；")]),t._v(" "),a("li",[t._v("**谁注入谁：**很明显是 IoC 容器注入应用程序某个对象，应用程序依赖的对象；")]),t._v(" "),a("li",[a("strong",[t._v("注入了什么")]),t._v("：就是注入某个对象所需要的外部资源（包括对象、资源、常量数据）。")])]),t._v(" "),a("h2",{attrs:{id:"ioc-依赖注入-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ioc-依赖注入-api"}},[t._v("#")]),t._v(" IoC 依赖注入 API")]),t._v(" "),a("ul",[a("li",[t._v("根据 Bean 名称注入")]),t._v(" "),a("li",[t._v("根据 Bean 类型注入")]),t._v(" "),a("li",[t._v("注入容器内建 Bean 对象")]),t._v(" "),a("li",[t._v("注入非 Bean 对象")]),t._v(" "),a("li",[t._v("注入类型\n"),a("ul",[a("li",[t._v("实时注入")]),t._v(" "),a("li",[t._v("延迟注入")])])])]),t._v(" "),a("h2",{attrs:{id:"依赖注入模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入模式"}},[t._v("#")]),t._v(" 依赖注入模式")]),t._v(" "),a("p",[t._v("依赖注入模式可以分为手动注入模式和自动注入模式。")]),t._v(" "),a("h3",{attrs:{id:"手动注入模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手动注入模式"}},[t._v("#")]),t._v(" 手动注入模式")]),t._v(" "),a("p",[t._v("手动注入模式：配置或者编程的方式，提前安排注入规则")]),t._v(" "),a("ul",[a("li",[t._v("XML 资源配置元信息")]),t._v(" "),a("li",[t._v("Java 注解配置元信息")]),t._v(" "),a("li",[t._v("API 配置元信息")])]),t._v(" "),a("h3",{attrs:{id:"自动注入模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动注入模式"}},[t._v("#")]),t._v(" 自动注入模式")]),t._v(" "),a("p",[t._v("自动注入模式即自动装配。自动装配（Autowiring）是指 Spring 容器可以自动装配 Bean 之间的关系。Spring 可以通过检查 "),a("code",[t._v("ApplicationContext")]),t._v(" 的内容，自动解析合作者（其他 Bean）。")]),t._v(" "),a("ul",[a("li",[t._v("自动装配可以显著减少属性或构造函数参数的配置。")]),t._v(" "),a("li",[t._v("随着对象的发展，自动装配可以更新配置。")])]),t._v(" "),a("blockquote",[a("p",[t._v("注：由于自动装配存在一些限制和不足，官方不推荐使用。")])]),t._v(" "),a("h4",{attrs:{id:"自动装配策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动装配策略"}},[t._v("#")]),t._v(" 自动装配策略")]),t._v(" "),a("p",[t._v("当使用基于 XML 的配置元数据时，可以使用 "),a("code",[t._v("<bean/>")]),t._v(" 元素的 "),a("code",[t._v("autowire")]),t._v(" 属性为 Bean 指定自动装配模式。自动装配模式有以下类型：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("模式")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("no")])]),t._v(" "),a("td",[t._v("默认值，未激活 Autowiring，需要手动指定依赖注入对象。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("byName")])]),t._v(" "),a("td",[t._v("根据被注入属性的名称作为 Bean 名称进行依赖查找，并将对象设置到该属性。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("byType")])]),t._v(" "),a("td",[t._v("根据被注入属性的类型作为依赖类型进行查找，并将对象设置到该属性。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("constructor")])]),t._v(" "),a("td",[t._v("特殊 byType 类型，用于构造器参数。")])])])]),t._v(" "),a("p",[a("code",[t._v("org.springframework.beans.factory.config.AutowireCapableBeanFactory")]),t._v(" 是 "),a("code",[t._v("BeanFactory")]),t._v(" 的子接口，它是 Spring 中用于实现自动装配的容器。")]),t._v(" "),a("h4",{attrs:{id:"autowired-注入过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#autowired-注入过程"}},[t._v("#")]),t._v(" @Autowired 注入过程")]),t._v(" "),a("ul",[a("li",[t._v("元信息解析")]),t._v(" "),a("li",[t._v("依赖查找")]),t._v(" "),a("li",[t._v("依赖注入（字段、方法）")])]),t._v(" "),a("h4",{attrs:{id:"自动装配的限制和不足"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动装配的限制和不足"}},[t._v("#")]),t._v(" 自动装配的限制和不足")]),t._v(" "),a("p",[t._v("自动装配有以下限制和不足：")]),t._v(" "),a("ul",[a("li",[t._v("属性和构造函数参数设置中的显式依赖项会覆盖自动装配。您不能自动装配简单属性，例如基础数据类型、字符串和类（以及此类简单属性的数组）。")]),t._v(" "),a("li",[t._v("自动装配不如显式装配精准。Spring 会尽量避免猜测可能存在歧义的结果。")]),t._v(" "),a("li",[t._v("Spring 容器生成文档的工具可能无法解析自动装配信息。")]),t._v(" "),a("li",[t._v("如果同一类型存在多个 Bean 时，自动装配时会存在歧义。容器内的多个 Bean 定义可能与要自动装配的 Setter 方法或构造函数参数指定的类型匹配。对于数组、集合或 Map 实例，这不一定是问题。但是，对于期望单值的依赖项，如果没有唯一的 Bean 定义可用，则会引发异常。")])]),t._v(" "),a("blockquote",[a("p",[t._v("自动装配的限制和不足，详情可以参考官方文档："),a("a",{attrs:{href:"https://docs.spring.io/spring/docs/5.2.2.RELEASE/spring-frameworkreference/core.html#beans-autowired-exceptions",target:"_blank",rel:"noopener noreferrer"}},[t._v("Limitations and Disadvantages of Autowiring 小节"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"依赖注入方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入方式"}},[t._v("#")]),t._v(" 依赖注入方式")]),t._v(" "),a("p",[t._v("依赖注入有如下方式：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("依赖注入方式")]),t._v(" "),a("th",[t._v("配置元数据举例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Setter 方法注入")]),t._v(" "),a("td",[a("code",[t._v('<proeprty name="user" ref="userBean"/>')])])]),t._v(" "),a("tr",[a("td",[t._v("构造器注入")]),t._v(" "),a("td",[a("code",[t._v('<constructor-arg name="user" ref="userBean" />')])])]),t._v(" "),a("tr",[a("td",[t._v("字段注入")]),t._v(" "),a("td",[a("code",[t._v("@Autowired User user;")])])]),t._v(" "),a("tr",[a("td",[t._v("方法注入")]),t._v(" "),a("td",[a("code",[t._v("@Autowired public void user(User user) { ... }")])])]),t._v(" "),a("tr",[a("td",[t._v("接口回调注入")]),t._v(" "),a("td",[a("code",[t._v("class MyBean implements BeanFactoryAware { ... }")])])])])]),t._v(" "),a("h3",{attrs:{id:"构造器注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造器注入"}},[t._v("#")]),t._v(" 构造器注入")]),t._v(" "),a("ul",[a("li",[t._v("手动模式\n"),a("ul",[a("li",[t._v("xml 配置元信息")]),t._v(" "),a("li",[t._v("注解配置元信息")]),t._v(" "),a("li",[t._v("Java 配置元信息")])])]),t._v(" "),a("li",[t._v("自动模式\n"),a("ul",[a("li",[t._v("constructor")])])])]),t._v(" "),a("p",[t._v("构造器注入是通过容器调用具有多个参数的构造函数来完成的，每个参数代表一个依赖项。调用带有特定参数的静态工厂方法来构造 bean 几乎是等价的，并且本次讨论对构造函数和静态工厂方法的参数进行了类似的处理。")]),t._v(" "),a("p",[t._v("下面是一个构造器注入示例：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleMovieLister")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the SimpleMovieLister has a dependency on a MovieFinder")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MovieFinder")]),t._v(" movieFinder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a constructor so that the Spring container can inject a MovieFinder")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleMovieLister")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MovieFinder")]),t._v(" movieFinder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("movieFinder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" movieFinder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// business logic that actually uses the injected MovieFinder is omitted...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("构造函数参数解析匹配通过使用参数的类型进行。如果 bean 定义的构造函数参数中不存在潜在的歧义，则在 bean 定义中定义构造函数参数的顺序是在实例化 bean 时将这些参数提供给适当构造函数的顺序。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("package x.y;\n\npublic class ThingOne {\n\n    public ThingOne(ThingTwo thingTwo, ThingThree thingThree) {\n        // ...\n    }\n}\n")])])]),a("p",[t._v("假设 ThingTwo 和 ThingThree 类没有继承关系，则不存在潜在的歧义。因此，以下配置工作正常，您无需在 "),a("code",[t._v("<constructor-arg/>")]),t._v(" 元素中显式指定构造函数参数索引或类型。")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("beans")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("beanOne"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("x.y.ThingOne"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("constructor-arg")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("beanTwo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("constructor-arg")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("beanThree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("beanTwo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("x.y.ThingTwo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("beanThree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("x.y.ThingThree"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("beans")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("当引用另一个 bean 时，类型是已知的，并且可以发生匹配（就像前面的示例一样）。当使用简单类型时，例如 "),a("code",[t._v("<value>true</value>")]),t._v(" ，Spring 无法确定 value 的类型，因此无法在没有帮助的情况下按类型匹配。考虑以下类：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("examples")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExampleBean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Number of years to calculate the Ultimate Answer")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" years"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The Answer to Life, the Universe, and Everything")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" ultimateAnswer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExampleBean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" years"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" ultimateAnswer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("years "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" years"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ultimateAnswer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ultimateAnswer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("构造函数参数类型匹配")]),t._v(" "),a("p",[t._v("在上述场景中，如果您使用 type 属性显式指定构造函数参数的类型，则容器可以使用简单类型的类型匹配，如以下示例所示：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("exampleBean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("examples.ExampleBean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("constructor-arg")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("int"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("7500000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("constructor-arg")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("java.lang.String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("42"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("构造函数参数索引匹配")]),t._v(" "),a("p",[t._v("可以使用 "),a("code",[t._v("index")]),t._v(" 属性显式指定构造函数参数的索引，如以下示例所示")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("exampleBean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("examples.ExampleBean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("constructor-arg")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("index")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("7500000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("constructor-arg")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("index")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("42"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("构造函数参数名称匹配")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("exampleBean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("examples.ExampleBean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("constructor-arg")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("years"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("7500000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("constructor-arg")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("ultimateAnswer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("42"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("可以使用 "),a("code",[t._v("@ConstructorProperties")]),t._v(" 显式命名构造函数参数。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("examples")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExampleBean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Fields omitted")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ConstructorProperties")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"years"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ultimateAnswer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExampleBean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" years"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" ultimateAnswer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("years "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" years"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ultimateAnswer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ultimateAnswer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"setter-方法注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setter-方法注入"}},[t._v("#")]),t._v(" Setter 方法注入")]),t._v(" "),a("ul",[a("li",[t._v("手动模式\n"),a("ul",[a("li",[t._v("xml 配置元信息")]),t._v(" "),a("li",[t._v("注解配置元信息")]),t._v(" "),a("li",[t._v("Java 配置元信息")])])]),t._v(" "),a("li",[t._v("自动模式\n"),a("ul",[a("li",[t._v("byName")]),t._v(" "),a("li",[t._v("byType")])])])]),t._v(" "),a("p",[t._v("Setter 方法注入是通过容器在调用无参数构造函数或无参数静态工厂方法来实例化 bean 后调用 bean 上的 setter 方法来完成的。")]),t._v(" "),a("p",[t._v("以下示例显示了一个只能通过使用纯 setter 注入进行依赖注入的类。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleMovieLister")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the SimpleMovieLister has a dependency on the MovieFinder")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MovieFinder")]),t._v(" movieFinder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a setter method so that the Spring container can inject a MovieFinder")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setMovieFinder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MovieFinder")]),t._v(" movieFinder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("movieFinder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" movieFinder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// business logic that actually uses the injected MovieFinder is omitted...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在 Spring 中，可以混合使用构造器注入和 setter 方法注入。建议将构造器注入用于强制依赖项；并将 setter 方法注入或配置方法用于可选依赖项。需要注意的是，在 setter 方法上使用 "),a("code",[t._v("@Required")]),t._v(" 注解可用于使属性成为必需的依赖项；然而，更建议使用构造器注入来完成这项工作。")]),t._v(" "),a("h3",{attrs:{id:"字段注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字段注入"}},[t._v("#")]),t._v(" 字段注入")]),t._v(" "),a("p",[t._v("手动模式（Java 注解配置元信息）")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("@Autowired")])]),t._v(" "),a("li",[a("code",[t._v("@Resource")])]),t._v(" "),a("li",[a("code",[t._v("@Inject")]),t._v("（可选）")])]),t._v(" "),a("h3",{attrs:{id:"方法注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法注入"}},[t._v("#")]),t._v(" 方法注入")]),t._v(" "),a("p",[t._v("手动模式（Java 注解配置元信息）")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("@Autowired")])]),t._v(" "),a("li",[a("code",[t._v("@Resource")])]),t._v(" "),a("li",[a("code",[t._v("@Inject")]),t._v("（可选）")]),t._v(" "),a("li",[a("code",[t._v("@Bean")])])]),t._v(" "),a("h3",{attrs:{id:"接口回调注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接口回调注入"}},[t._v("#")]),t._v(" 接口回调注入")]),t._v(" "),a("p",[t._v("Aware 系列接口回调")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("內建接口")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("BeanFactoryAware")])]),t._v(" "),a("td",[t._v("获取 IoC 容器- "),a("code",[t._v("BeanFactory")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ApplicationContextAware")])]),t._v(" "),a("td",[t._v("获取 Spring 应用上下文- "),a("code",[t._v("ApplicationContext")]),t._v(" 对象")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("EnvironmentAware")])]),t._v(" "),a("td",[t._v("获取 "),a("code",[t._v("Environment")]),t._v(" 对象")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ResourceLoaderAware")])]),t._v(" "),a("td",[t._v("获取资源加载器对象- "),a("code",[t._v("ResourceLoader")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("BeanClassLoaderAware")])]),t._v(" "),a("td",[t._v("获取加载当前 Bean Class 的 "),a("code",[t._v("ClassLoader")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("BeanNameAware")])]),t._v(" "),a("td",[t._v("获取当前 Bean 的名称")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("MessageSourceAware")])]),t._v(" "),a("td",[t._v("获取 "),a("code",[t._v("MessageSource")]),t._v(" 对象，用于 Spring 国际化")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ApplicationEventPublisherAware")])]),t._v(" "),a("td",[t._v("获取 "),a("code",[t._v("ApplicationEventPublishAware")]),t._v(" 对象，用于 Spring 事件")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("EmbeddedValueResolverAware")])]),t._v(" "),a("td",[t._v("获取 "),a("code",[t._v("StringValueResolver")]),t._v(" 对象，用于占位符处理")])])])]),t._v(" "),a("h3",{attrs:{id:"依赖注入选型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入选型"}},[t._v("#")]),t._v(" 依赖注入选型")]),t._v(" "),a("ul",[a("li",[t._v("低依赖：构造器注入")]),t._v(" "),a("li",[t._v("多依赖：Setter 方法注入")]),t._v(" "),a("li",[t._v("便利性：字段注入")]),t._v(" "),a("li",[t._v("声明类：方法注入")])]),t._v(" "),a("h2",{attrs:{id:"限定注入和延迟注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#限定注入和延迟注入"}},[t._v("#")]),t._v(" 限定注入和延迟注入")]),t._v(" "),a("h3",{attrs:{id:"限定注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#限定注入"}},[t._v("#")]),t._v(" 限定注入")]),t._v(" "),a("ul",[a("li",[t._v("使用 "),a("code",[t._v("@Qualifier")]),t._v(" 注解限定\n"),a("ul",[a("li",[t._v("通过 Bean 名称限定")]),t._v(" "),a("li",[t._v("通过分组限定")])])]),t._v(" "),a("li",[t._v("通过 "),a("code",[t._v("@Qualifier")]),t._v(" 注解扩展限定\n"),a("ul",[a("li",[t._v("自定义注解：如 Spring Cloud 的 "),a("code",[t._v("@LoadBalanced")])])])])]),t._v(" "),a("h3",{attrs:{id:"延迟注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#延迟注入"}},[t._v("#")]),t._v(" 延迟注入")]),t._v(" "),a("ul",[a("li",[t._v("使用 "),a("code",[t._v("ObjectFactory")])]),t._v(" "),a("li",[t._v("使用 "),a("code",[t._v("ObjectProvider")]),t._v("（推荐）")])]),t._v(" "),a("h2",{attrs:{id:"依赖注入数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入数据类型"}},[t._v("#")]),t._v(" 依赖注入数据类型")]),t._v(" "),a("h3",{attrs:{id:"基础类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础类型"}},[t._v("#")]),t._v(" 基础类型")]),t._v(" "),a("ul",[a("li",[t._v("基础数据类型："),a("code",[t._v("boolean")]),t._v("、"),a("code",[t._v("byte")]),t._v("、"),a("code",[t._v("char")]),t._v("、"),a("code",[t._v("short")]),t._v("、"),a("code",[t._v("int")]),t._v("、"),a("code",[t._v("float")]),t._v("、"),a("code",[t._v("long")]),t._v("、"),a("code",[t._v("double")])]),t._v(" "),a("li",[t._v("标量类型："),a("code",[t._v("Number")]),t._v("、"),a("code",[t._v("Character")]),t._v("、"),a("code",[t._v("Boolean")]),t._v("、"),a("code",[t._v("Enum")]),t._v("、"),a("code",[t._v("Locale")]),t._v("、"),a("code",[t._v("Charset")]),t._v("、"),a("code",[t._v("Currency")]),t._v("、"),a("code",[t._v("Properties")]),t._v("、"),a("code",[t._v("UUID")])]),t._v(" "),a("li",[t._v("常规类型："),a("code",[t._v("Object")]),t._v("、"),a("code",[t._v("String")]),t._v("、"),a("code",[t._v("TimeZone")]),t._v("、"),a("code",[t._v("Calendar")]),t._v("、"),a("code",[t._v("Optional")]),t._v(" 等")]),t._v(" "),a("li",[t._v("Spring 类型："),a("code",[t._v("Resource")]),t._v("、"),a("code",[t._v("InputSource")]),t._v("、"),a("code",[t._v("Formatter")]),t._v(" 等。")])]),t._v(" "),a("h3",{attrs:{id:"集合类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合类型"}},[t._v("#")]),t._v(" 集合类型")]),t._v(" "),a("p",[t._v("数组类型：基础数据类型、标量类型、常规类型、String 类型的数组")]),t._v(" "),a("p",[t._v("集合类型：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Collection")]),t._v("："),a("code",[t._v("List")]),t._v("、"),a("code",[t._v("Set")])]),t._v(" "),a("li",[a("code",[t._v("Map")]),t._v("："),a("code",[t._v("Properties")])])]),t._v(" "),a("h2",{attrs:{id:"依赖处理过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖处理过程"}},[t._v("#")]),t._v(" 依赖处理过程")]),t._v(" "),a("p",[t._v("入口："),a("code",[t._v("DefaultListableBeanFactory#resolveDependency")])]),t._v(" "),a("p",[t._v("依赖描述符："),a("code",[t._v("DependencyDescriptor")])]),t._v(" "),a("p",[t._v("自定义绑定候选对象处理器："),a("code",[t._v("AutowireCandidateResolver")])]),t._v(" "),a("p",[a("code",[t._v("@Autowired")]),t._v("、"),a("code",[t._v("@Value")]),t._v("、"),a("code",[t._v("@javax.inject.Inject")]),t._v(" 处理器："),a("code",[t._v("AutowiredAnnotationBeanPostProcessor")])]),t._v(" "),a("p",[t._v("通用注解处理器："),a("code",[t._v("CommonAnnotationBeanPostProcessor")])]),t._v(" "),a("ul",[a("li",[t._v("注入注解\n"),a("ul",[a("li",[a("code",[t._v("javax.xml.ws.WebServiceRef")])]),t._v(" "),a("li",[a("code",[t._v("javax.ejb.EJB")])]),t._v(" "),a("li",[a("code",[t._v("javax.annotation.Resources")])])])]),t._v(" "),a("li",[t._v("生命周期注解\n"),a("ul",[a("li",[a("code",[t._v("javax.annotation.PostConstruct")])]),t._v(" "),a("li",[a("code",[t._v("javax.annotation.PreDestroy")])])])])]),t._v(" "),a("p",[t._v("自定义依赖注入注解：")]),t._v(" "),a("ul",[a("li",[t._v("生命周期处理\n"),a("ul",[a("li",[a("code",[t._v("InstantiationAwareBeanPostProcessor")])]),t._v(" "),a("li",[a("code",[t._v("MergedBeanDefinitionPostProcessor")])])])]),t._v(" "),a("li",[t._v("元数据\n"),a("ul",[a("li",[a("code",[t._v("InjectionMetadata")])]),t._v(" "),a("li",[a("code",[t._v("InjectionMetadata.InjectedElement")])])])])]),t._v(" "),a("h2",{attrs:{id:"依赖查找-vs-依赖注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖查找-vs-依赖注入"}},[t._v("#")]),t._v(" 依赖查找 VS. 依赖注入")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("依赖处理")]),t._v(" "),a("th",[t._v("实现复杂度")]),t._v(" "),a("th",[t._v("代码侵入性")]),t._v(" "),a("th",[t._v("API 依赖性")]),t._v(" "),a("th",[t._v("可读性")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("依赖查找")]),t._v(" "),a("td",[t._v("主动")]),t._v(" "),a("td",[t._v("相对繁琐")]),t._v(" "),a("td",[t._v("侵入业务逻辑")]),t._v(" "),a("td",[t._v("依赖容器 API")]),t._v(" "),a("td",[t._v("良好")])]),t._v(" "),a("tr",[a("td",[t._v("依赖注入")]),t._v(" "),a("td",[t._v("被动")]),t._v(" "),a("td",[t._v("相对便利")]),t._v(" "),a("td",[t._v("低侵入性")]),t._v(" "),a("td",[t._v("不依赖容器 API")]),t._v(" "),a("td",[t._v("一般")])])])]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring 官方文档之 Core Technologies"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://time.geekbang.org/course/intro/265",target:"_blank",rel:"noopener noreferrer"}},[t._v("《小马哥讲 Spring 核心编程思想》"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);