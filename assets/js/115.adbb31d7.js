(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{478:function(t,a,e){"use strict";e.r(a);var s=e(14),n=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"springboot-actuator-快速入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot-actuator-快速入门"}},[t._v("#")]),t._v(" SpringBoot Actuator 快速入门")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/spring-projects/spring-boot/tree/v2.7.0/spring-boot-project/spring-boot-actuator",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("spring-boot-actuator")]),a("OutboundLink")],1),t._v(" 模块提供了 Spring Boot 的所有生产就绪功能。启用这些功能的推荐方法是添加 "),a("code",[t._v("spring-boot-starter-actuator")]),t._v(" 依赖。")]),t._v(" "),a("p",[t._v("如果是 Maven 项目，添加以下依赖：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencies")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-actuator"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependencies")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("如果是 Gradle 项目，添加以下声明：")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[t._v("dependencies "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    implementation "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'org.springframework.boot:spring-boot-starter-actuator'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"端点-endpoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#端点-endpoint"}},[t._v("#")]),t._v(" 端点（Endpoint）")]),t._v(" "),a("p",[t._v("Actuator Endpoint 使 Spring Boot 用户可以监控应用，并和应用进行交互。Spring Boot 内置了许多 端点，并允许用户自定义端点。例如，"),a("code",[t._v("health")]),t._v(" 端点提供基本的应用健康信息。")]),t._v(" "),a("p",[t._v("用户可以启用或禁用每个单独的端点并通过 HTTP 或 JMX 暴露它们（使它们可远程访问）。当端点被启用和公开时，它被认为是可用的。内置端点仅在可用时才会自动配置。大多数应用程序选择通过 HTTP 公开。例如，默认情况下，"),a("code",[t._v("health")]),t._v(" 端点映射到 "),a("code",[t._v("/actuator/health")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"启用端点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启用端点"}},[t._v("#")]),t._v(" 启用端点")]),t._v(" "),a("p",[t._v("默认情况下，除了 "),a("code",[t._v("shutdown")]),t._v(" 之外的所有端点都已启用。要配置端点的启用，请使用 "),a("code",[t._v("management.endpoint.<id>.enabled")]),t._v(" 属性。以下示例启用 "),a("code",[t._v("shutdown")]),t._v(" 端点：")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.endpoint.shutdown.enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n")])])]),a("p",[t._v("如果您希望端点是明确指定才启用，请将 "),a("code",[t._v("management.endpoints.enabled-by-default")]),t._v(" 属性设置为 false 并根据需要明确指定启用的端点，以下为示例：")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.endpoints.enabled-by-default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.endpoint.info.enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n")])])]),a("h3",{attrs:{id:"暴露端点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#暴露端点"}},[t._v("#")]),t._v(" 暴露端点")]),t._v(" "),a("p",[t._v("由于端点可能包含敏感信息，您应该仔细考虑何时暴露它们。下表显示了内置端点的默认曝光：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("ID")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("JMX")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Web")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("auditevents")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("beans")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("caches")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("conditions")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("configprops")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("env")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("flyway")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("health")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("heapdump")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("N/A")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("httptrace")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("info")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("integrationgraph")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("jolokia")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("N/A")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("logfile")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("N/A")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("loggers")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("liquibase")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("metrics")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("mappings")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("prometheus")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("N/A")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("quartz")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("scheduledtasks")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("sessions")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("shutdown")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("startup")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("threaddump")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("No")])])])]),t._v(" "),a("p",[t._v("要更改暴露的端点，请使用以下特定于技术的包含和排除属性：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Property")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Default")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("management.endpoints.jmx.exposure.exclude")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("management.endpoints.jmx.exposure.include")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("*")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("management.endpoints.web.exposure.exclude")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("management.endpoints.web.exposure.include")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("health")])])])])]),t._v(" "),a("p",[a("code",[t._v("include")]),t._v(" 属性列出了暴露的端点的 ID。 "),a("code",[t._v("exclude")]),t._v(" 属性列出了不应暴露的端点的 ID。 "),a("code",[t._v("exclude")]),t._v(" 属性优先于 "),a("code",[t._v("include")]),t._v(" 属性。您可以使用端点 ID 列表配置包含和排除属性。")]),t._v(" "),a("p",[t._v("例如，仅暴露 "),a("code",[t._v("health")]),t._v(" 和 info 端点，其他端点都不通过 JMX 暴露，可以按如下配置：")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.endpoints.jmx.exposure.include")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("health,info")]),t._v("\n")])])]),a("p",[t._v("注意："),a("code",[t._v("*")]),t._v(" 可用于选择所有端点。")]),t._v(" "),a("h3",{attrs:{id:"安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[t._v("#")]),t._v(" 安全")]),t._v(" "),a("p",[t._v("出于安全考虑，只有 "),a("code",[t._v("/health")]),t._v(" 端点会通过 HTTP 方式暴露。用户可以通过 "),a("code",[t._v("management.endpoints.web.exposure.include")]),t._v(" 决定哪些端点可以通过 HTTP 方式暴露。")]),t._v(" "),a("p",[t._v("如果 Spring Security 在类路径上并且不存在其他 "),a("code",[t._v("WebSecurityConfigurerAdapter")]),t._v(" 或 "),a("code",[t._v("SecurityFilterChain")]),t._v(" bean，则除 "),a("code",[t._v("/health")]),t._v(" 之外的所有 actuator 都由 Spring Boot 自动启用安全控制。如果用户自定义了 "),a("code",[t._v("WebSecurityConfigurerAdapter")]),t._v(" 或 "),a("code",[t._v("SecurityFilterChain")]),t._v(" bean，Spring Boot 不再启用安全控制，由用户自行控制访问规则。")]),t._v(" "),a("p",[t._v("如果您希望为 HTTP 端点定义安全控制（例如，只允许具有特定角色的用户访问它们），Spring Boot 提供了一些方便的 "),a("code",[t._v("RequestMatcher")]),t._v(" 对象，您可以将它们与 Spring Security 结合使用。")]),t._v(" "),a("p",[t._v("下面是一个典型的 Spring Security 配置示例：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxyBeanMethods "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySecurityConfiguration")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SecurityFilterChain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("securityFilterChain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpSecurity")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EndpointRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toAnyEndpoint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("authorizeRequests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("requests"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" requests"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("anyRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasRole")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ENDPOINT_ADMIN"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("httpBasic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("前面的示例使用 EndpointRequest.toAnyEndpoint() 将请求匹配到任何端点，然后确保所有端点都具有 ENDPOINT_ADMIN 角色。 EndpointRequest 上还提供了其他几种匹配器方法。")]),t._v(" "),a("p",[t._v("如果希望无需身份验证即可访问所有执行器端点。可以通过更改 management.endpoints.web.exposure.include 属性来做到这一点，如下所示：")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.endpoints.web.exposure.include")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("*")]),t._v("\n")])])]),a("p",[t._v("此外，如果存在 Spring Security，您将需要添加自定义安全配置，以允许未经身份验证的访问端点，如以下示例所示：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxyBeanMethods "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySecurityConfiguration")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SecurityFilterChain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("securityFilterChain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpSecurity")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestMatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EndpointRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toAnyEndpoint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("authorizeRequests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("requests"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" requests"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("anyRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("permitAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("由于 Spring Boot 依赖于 Spring Security 的默认设置，因此 CSRF 保护默认开启。这意味着在使用默认安全配置时，需要 POST（关闭和记录器端点）、PUT 或 DELETE 的执行器端点会收到 403（禁止）错误。")]),t._v(" "),a("blockquote",[a("p",[t._v("建议仅在创建非浏览器客户端使用的服务时完全禁用 CSRF 保护。")])]),t._v(" "),a("h3",{attrs:{id:"配置端点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置端点"}},[t._v("#")]),t._v(" 配置端点")]),t._v(" "),a("p",[t._v("端点会自动缓存对不带任何参数的读操作的响应数据。要配置端点缓存响应的时间量，请使用其 "),a("code",[t._v("cache.time-to-live")]),t._v(" 属性。以下示例将 bean 端点缓存的生存时间设置为 10 秒：")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.endpoint.beans.cache.time-to-live")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("10s")]),t._v("\n")])])]),a("h3",{attrs:{id:"actuator-web-端点的超媒体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#actuator-web-端点的超媒体"}},[t._v("#")]),t._v(" Actuator Web 端点的超媒体")]),t._v(" "),a("p",[t._v("Spring Boot Actuator 中内置了一个“发现页面”端点，其中包含了所有端点的链接。默认情况下，“发现页面”在 "),a("code",[t._v("/actuator")]),t._v(" 上可用。")]),t._v(" "),a("p",[t._v("要禁用“发现页面”，请将以下属性添加到您的应用程序属性中：")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.endpoints.web.discovery.enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n")])])]),a("p",[t._v("配置自定义管理上下文路径后，“发现页面”会自动从 "),a("code",[t._v("/actuator")]),t._v(" 移动到应用管理上下文的根目录。例如，如果管理上下文路径是 "),a("code",[t._v("/management")]),t._v("，则发现页面可从 "),a("code",[t._v("/management")]),t._v(" 获得。当管理上下文路径设置为 / 时，发现页面被禁用以防止与其他映射发生冲突的可能性。")]),t._v(" "),a("h3",{attrs:{id:"跨域支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨域支持"}},[t._v("#")]),t._v(" 跨域支持")]),t._v(" "),a("p",[t._v("CORS 是一种 W3C 规范，可让用户以灵活的方式指定授权哪种跨域请求。如果使用 Spring MVC 或 Spring WebFlux，则可以配置 Actuator 的 Web 端点以支持此类场景。")]),t._v(" "),a("p",[t._v("CORS 支持默认是禁用的，只有在设置 "),a("code",[t._v("management.endpoints.web.cors.allowed-origins")]),t._v(" 属性后才会启用。以下配置允许来自 example.com 域的 GET 和 POST 调用：")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.endpoints.web.cors.allowed-origins")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("https://example.com")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.endpoints.web.cors.allowed-methods")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("GET,POST")]),t._v("\n")])])]),a("h3",{attrs:{id:"自定义端点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义端点"}},[t._v("#")]),t._v(" 自定义端点")]),t._v(" "),a("p",[t._v("如果添加带有 "),a("code",[t._v("@Endpoint")]),t._v(" 注释的 "),a("code",[t._v("@Bean")]),t._v("，则任何带有 "),a("code",[t._v("@ReadOperation")]),t._v("、"),a("code",[t._v("@WriteOperation")]),t._v(" 或 "),a("code",[t._v("@DeleteOperation")]),t._v(" 注释的方法都会自动通过 JMX 公开，并且在 Web 应用程序中，也可以通过 HTTP 公开。可以使用 Jersey、Spring MVC 或 Spring WebFlux 通过 HTTP 公开端点。如果 Jersey 和 Spring MVC 都可用，则使用 Spring MVC。")]),t._v(" "),a("p",[t._v("以下示例公开了一个返回自定义对象的读取操作：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ReadOperation")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomData")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("您还可以使用 "),a("code",[t._v("@JmxEndpoint")]),t._v(" 或 "),a("code",[t._v("@WebEndpoint")]),t._v(" 编写特定技术的端点。这些端点仅限于各自的技术。例如，"),a("code",[t._v("@WebEndpoint")]),t._v(" 仅通过 HTTP 而不是通过 JMX 公开。")]),t._v(" "),a("p",[t._v("您可以使用 "),a("code",[t._v("@EndpointWebExtension")]),t._v(" 和 "),a("code",[t._v("@EndpointJmxExtension")]),t._v(" 编写特定技术的扩展。这些注释让您可以提供特定技术的操作来扩充现有端点。")]),t._v(" "),a("p",[t._v("最后，如果您需要访问 Web 框架的功能，您可以实现 servlet 或 Spring "),a("code",[t._v("@Controller")]),t._v(" 和 "),a("code",[t._v("@RestController")]),t._v(" 端点，但代价是它们无法通过 JMX 或使用不同的 Web 框架获得。")]),t._v(" "),a("h2",{attrs:{id:"通过-http-进行监控和管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过-http-进行监控和管理"}},[t._v("#")]),t._v(" 通过 HTTP 进行监控和管理")]),t._v(" "),a("h3",{attrs:{id:"自定义管理端点路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义管理端点路径"}},[t._v("#")]),t._v(" 自定义管理端点路径")]),t._v(" "),a("p",[t._v("如果是 Web 应用，Spring Boot Actuator 会自动将所有启用的端点通过 HTTP 方式暴露。默认约定是使用前缀为 "),a("code",[t._v("/actuator")]),t._v(" 的端点的 id 作为 URL 路径。例如，健康被暴露为 "),a("code",[t._v("/actuator/health")]),t._v("。")]),t._v(" "),a("p",[t._v("有时，自定义管理端点的前缀很有用。例如，您的应用程序可能已经将 "),a("code",[t._v("/actuator")]),t._v(" 用于其他目的。您可以使用 "),a("code",[t._v("management.endpoints.web.base-path")]),t._v(" 属性更改管理端点的前缀，如以下示例所示：")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.endpoints.web.base-path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("/manage")]),t._v("\n")])])]),a("p",[t._v("该示例将端点从 "),a("code",[t._v("/actuator/{id}")]),t._v(" 更改为 "),a("code",[t._v("/manage/{id}")]),t._v("（例如，"),a("code",[t._v("/manage/info")]),t._v("）。")]),t._v(" "),a("h3",{attrs:{id:"自定义管理服务器端口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义管理服务器端口"}},[t._v("#")]),t._v(" 自定义管理服务器端口")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.server.port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("8081")]),t._v("\n")])])]),a("h3",{attrs:{id:"配置-ssl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-ssl"}},[t._v("#")]),t._v(" 配置 SSL")]),t._v(" "),a("p",[t._v("当配置为使用自定义端口时，还可以使用各种 "),a("code",[t._v("management.server.ssl.*")]),t._v(" 属性为管理服务器配置自己的 SSL。例如，这样做可以让管理服务器在主应用程序使用 HTTPS 时通过 HTTP 可用，如以下属性设置所示：")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("server.port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("8443")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("server.ssl.enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("server.ssl.key-store")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("classpath:store.jks")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("server.ssl.key-password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("secret")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.server.port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("8080")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.server.ssl.enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("false")]),t._v("\n")])])]),a("p",[t._v("或者，主服务器和管理服务器都可以使用 SSL，但使用不同的密钥存储，如下所示：")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("server.port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("8443")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("server.ssl.enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("server.ssl.key-store")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("classpath:main.jks")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("server.ssl.key-password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("secret")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.server.port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("8080")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.server.ssl.enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.server.ssl.key-store")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("classpath:management.jks")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.server.ssl.key-password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("secret")]),t._v("\n")])])]),a("h3",{attrs:{id:"自定义管理服务器地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义管理服务器地址"}},[t._v("#")]),t._v(" 自定义管理服务器地址")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.server.port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("8081")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.server.address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("127.0.0.1")]),t._v("\n")])])]),a("h3",{attrs:{id:"禁用-http-端点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#禁用-http-端点"}},[t._v("#")]),t._v(" 禁用 HTTP 端点")]),t._v(" "),a("p",[t._v("如果您不想通过 HTTP 方式暴露端点，可以将管理端口设置为 -1，如以下示例所示：")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.server.port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("-1")]),t._v("\n")])])]),a("p",[t._v("也可以通过使用 management.endpoints.web.exposure.exclude 属性来实现这一点，如以下示例所示：")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.endpoints.web.exposure.exclude")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("*")]),t._v("\n")])])]),a("h2",{attrs:{id:"通过-jmx-进行监控和管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过-jmx-进行监控和管理"}},[t._v("#")]),t._v(" 通过 JMX 进行监控和管理")]),t._v(" "),a("p",[t._v("Java 管理扩展 (JMX) 提供了一种标准机制来监视和管理应用程序。默认情况下，此功能未启用。您可以通过将 "),a("code",[t._v("spring.jmx.enabled")]),t._v(" 配置属性设置为 true 来打开它。 Spring Boot 将最合适的 "),a("code",[t._v("MBeanServer")]),t._v(" 暴露为 ID 为 "),a("code",[t._v("mbeanServer")]),t._v(" 的 bean。使用 Spring JMX 注释（"),a("code",[t._v("@ManagedResource")]),t._v("、"),a("code",[t._v("@ManagedAttribute")]),t._v(" 或 "),a("code",[t._v("@ManagedOperation")]),t._v("）注释的任何 bean 都会暴露给它。")]),t._v(" "),a("p",[t._v("如果您的平台提供标准 "),a("code",[t._v("MBeanServer")]),t._v("，则 Spring Boot 会使用该标准并在必要时默认使用 VM "),a("code",[t._v("MBeanServer")]),t._v("。如果一切都失败了，则创建一个新的 "),a("code",[t._v("MBeanServer")]),t._v("。")]),t._v(" "),a("p",[t._v("有关更多详细信息，请参阅 "),a("a",{attrs:{href:"https://github.com/spring-projects/spring-boot/tree/v2.7.0/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration.java",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("JmxAutoConfiguration")]),a("OutboundLink")],1),t._v(" 类。")]),t._v(" "),a("p",[t._v("默认情况下，Spring Boot 还将管理端点公开为 "),a("code",[t._v("org.springframework.boot")]),t._v(" 域下的 JMX MBean。要完全控制 JMX 域中的端点注册，请考虑注册您自己的 "),a("code",[t._v("EndpointObjectNameFactory")]),t._v(" 实现。")]),t._v(" "),a("h3",{attrs:{id:"定制化-mbean-names"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定制化-mbean-names"}},[t._v("#")]),t._v(" 定制化 MBean Names")]),t._v(" "),a("p",[t._v("MBean 的名称通常由端点的 id 生成。例如，健康端点公开为 "),a("code",[t._v("org.springframework.boot:type=Endpoint,name=Health")]),t._v("。")]),t._v(" "),a("p",[t._v("如果您的应用程序包含多个 Spring "),a("code",[t._v("ApplicationContext")]),t._v("，您可能会发现名称冲突。要解决此问题，您可以将 "),a("code",[t._v("spring.jmx.unique-names")]),t._v(" 属性设置为 true，以便 MBean 名称始终是唯一的。")]),t._v(" "),a("p",[t._v("如果需要定制，跨域按如下配置：")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("spring.jmx.unique-names")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("management.endpoints.jmx.domain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("com.example.myapp")]),t._v("\n")])])]),a("h3",{attrs:{id:"禁用-jmx-端点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#禁用-jmx-端点"}},[t._v("#")]),t._v(" 禁用 JMX 端点")]),t._v(" "),a("p",[t._v("想禁用 JMX 端点，可以按如下配置：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("management.endpoints.jmx.exposure.exclude=*\n")])])]),a("h3",{attrs:{id:"将-jolokia-用于基于-http-的-jmx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将-jolokia-用于基于-http-的-jmx"}},[t._v("#")]),t._v(" 将 Jolokia 用于基于 HTTP 的 JMX")]),t._v(" "),a("p",[t._v("Jolokia 是一个 JMX-HTTP 的桥接工具，它提供了另一种访问 JMX bean 的方法。要使用 Jolokia，需要先添加依赖：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.jolokia"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("jolokia-core"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n</dependency\n")])])]),a("p",[t._v("然后，您可以通过将 "),a("code",[t._v("jolokia")]),t._v(" 或 "),a("code",[t._v("*")]),t._v(" 添加到 "),a("code",[t._v("Management.Endpoints.web.exposure.include")]),t._v(" 属性来暴露 Jolokia 端点。然后，您可以在管理 HTTP 服务器上使用 "),a("code",[t._v("/actuator/jolokia")]),t._v(" 访问它。")]),t._v(" "),a("h2",{attrs:{id:"日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日志"}},[t._v("#")]),t._v(" 日志")]),t._v(" "),a("p",[t._v("Spring Boot Actuator 支持查看和配置应用日志级别。")]),t._v(" "),a("p",[t._v("日志级别的可选值如下：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("TRACE")])]),t._v(" "),a("li",[a("code",[t._v("DEBUG")])]),t._v(" "),a("li",[a("code",[t._v("INFO")])]),t._v(" "),a("li",[a("code",[t._v("WARN")])]),t._v(" "),a("li",[a("code",[t._v("ERROR")])]),t._v(" "),a("li",[a("code",[t._v("FATAL")])]),t._v(" "),a("li",[a("code",[t._v("OFF")])]),t._v(" "),a("li",[a("code",[t._v("null")])])]),t._v(" "),a("p",[a("code",[t._v("null")]),t._v(" 表示没有显式配置。")]),t._v(" "),a("h2",{attrs:{id:"指标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指标"}},[t._v("#")]),t._v(" 指标")]),t._v(" "),a("h2",{attrs:{id:"审计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#审计"}},[t._v("#")]),t._v(" 审计")]),t._v(" "),a("p",[t._v("Spring Boot Actuator 支持简单的审计功能。如果应用中启用了 Spring Security，Spring Boot Actuator 就会发布安全事件（如：“身份验证成功”、“失败”和“访问被拒绝”异常）。")]),t._v(" "),a("p",[t._v("可以通过在应用的配置中提供 "),a("code",[t._v("AuditEventRepository")]),t._v(" 类型的 bean 来启用审计。为方便起见，Spring Boot 提供了一个 "),a("code",[t._v("InMemoryAuditEventRepository")]),t._v("。 "),a("code",[t._v("InMemoryAuditEventRepository")]),t._v(" 的功能有限，建议仅将其用于开发环境。")]),t._v(" "),a("p",[t._v("如果要自定义安全事件，可以提供 "),a("code",[t._v("AbstractAuthenticationAuditListener")]),t._v(" 和 "),a("code",[t._v("AbstractAuthorizationAuditListener")]),t._v(" 实现。")]),t._v(" "),a("p",[t._v("此外，还可以将审计服务用于业务活动。为此，要么将 "),a("code",[t._v("AuditEventRepository")]),t._v(" bean 注入组件并直接使用它，要么使用 Spring "),a("code",[t._v("ApplicationEventPublisher")]),t._v(" 发布 "),a("code",[t._v("AuditApplicationEvent")]),t._v("（通过实现 "),a("code",[t._v("ApplicationEventPublisherAware")]),t._v("）。")]),t._v(" "),a("h2",{attrs:{id:"http-追踪"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-追踪"}},[t._v("#")]),t._v(" HTTP 追踪")]),t._v(" "),a("p",[t._v("用户可以通过在应用中提供 "),a("code",[t._v("HttpTraceRepository")]),t._v(" 类型的 bean 来启用 HTTP 跟踪。Spring Boot 提供了内置的 "),a("code",[t._v("InMemoryHttpTraceRepository")]),t._v("，它可以存储最近 100 次（默认）请求-响应的追踪数据。与其他 HTTP 追踪解决方案相比，"),a("code",[t._v("InMemoryHttpTraceRepository")]),t._v(" 比较受限，建议仅用于开发环境。对于生产环境，建议使用 Zipkin 或 Spring Cloud Sleuth。")]),t._v(" "),a("p",[t._v("或者，可以自定义 "),a("code",[t._v("HttpTraceRepository")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"处理监控"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#处理监控"}},[t._v("#")]),t._v(" 处理监控")]),t._v(" "),a("p",[t._v("在 spring-boot 模块中，您可以找到两个类来创建对进程监控有用的文件：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ApplicationPidFileWriter")]),t._v(" 创建一个包含应用程序 PID 的文件（默认情况下，在应用程序目录中，文件名为 "),a("code",[t._v("application.pid")]),t._v("）。")]),t._v(" "),a("li",[a("code",[t._v("WebServerPortFileWriter")]),t._v(" 创建一个文件（或多个文件），其中包含正在运行的 Web 服务器的端口（默认情况下，在应用程序目录中，文件名为 "),a("code",[t._v("application.port")]),t._v("）。")])]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html#actuator",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Boot 官方文档之 Production-ready Features"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);