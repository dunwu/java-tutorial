(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{440:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"spring-资源管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-资源管理"}},[t._v("#")]),t._v(" Spring 资源管理")]),t._v(" "),s("blockquote",[s("p",[t._v("Version 6.0.3")])]),t._v(" "),s("h2",{attrs:{id:"resource-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resource-接口"}},[t._v("#")]),t._v(" Resource 接口")]),t._v(" "),s("p",[t._v("相对标准 URL 访问机制，Spring 的 "),s("code",[t._v("org.springframework.core.io.Resource")]),t._v(" 接口抽象了对底层资源的访问接口，提供了一套更好的访问方式。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Resource")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStreamSource")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exists")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isReadable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isOpen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getURL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URI")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getURI")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReadableByteChannel")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readableChannel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("contentLength")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastModified")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Resource")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRelative")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" relativePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFilename")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDescription")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("正如 "),s("code",[t._v("Resource")]),t._v(" 接口的定义所示，它扩展了 "),s("code",[t._v("InputStreamSource")]),t._v(" 接口。"),s("code",[t._v("Resource")]),t._v(" 最核心的方法如下：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("getInputStream()")]),t._v(" - 定位并且打开当前资源，返回当前资源的 "),s("code",[t._v("InputStream")]),t._v("。每次调用都会返回一个新的 "),s("code",[t._v("InputStream")]),t._v("。调用者需要负责关闭流。")]),t._v(" "),s("li",[s("code",[t._v("exists()")]),t._v(" - 判断当前资源是否真的存在。")]),t._v(" "),s("li",[s("code",[t._v("isOpen()")]),t._v(" - 判断当前资源是否是一个已打开的 "),s("code",[t._v("InputStream")]),t._v("。如果为 true，则 "),s("code",[t._v("InputStream")]),t._v(" 不能被多次读取，必须只读取一次然后关闭以避免资源泄漏。对所有常用资源实现返回 false，"),s("code",[t._v("InputStreamResource")]),t._v(" 除外。")]),t._v(" "),s("li",[s("code",[t._v("getDescription()")]),t._v(" - 返回当前资源的描述，当处理资源出错时，资源的描述会用于错误信息的输出。一般来说，资源的描述是一个完全限定的文件名称，或者是当前资源的真实 URL。")])]),t._v(" "),s("p",[t._v("常见 Spring 资源接口：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("类型")]),t._v(" "),s("th",[t._v("接口")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("输入流")]),t._v(" "),s("td",[s("code",[t._v("org.springframework.core.io.InputStreamSource")])])]),t._v(" "),s("tr",[s("td",[t._v("只读资源")]),t._v(" "),s("td",[s("code",[t._v("org.springframework.core.io.Resource")])])]),t._v(" "),s("tr",[s("td",[t._v("可写资源")]),t._v(" "),s("td",[s("code",[t._v("org.springframework.core.io.WritableResource")])])]),t._v(" "),s("tr",[s("td",[t._v("编码资源")]),t._v(" "),s("td",[s("code",[t._v("org.springframework.core.io.support.EncodedResource")])])]),t._v(" "),s("tr",[s("td",[t._v("上下文资源")]),t._v(" "),s("td",[s("code",[t._v("org.springframework.core.io.ContextResource")])])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/master/snap/20221223155859.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"内置的-resource-实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置的-resource-实现"}},[t._v("#")]),t._v(" 内置的 Resource 实现")]),t._v(" "),s("p",[t._v("Spring 包括几个内置的 Resource 实现：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("资源来源")]),t._v(" "),s("th",[t._v("前缀")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#resources-implementations-urlresource",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("UrlResource")]),s("OutboundLink")],1)]),t._v(" "),s("td",[s("code",[t._v("file:")]),t._v("、"),s("code",[t._v("https:")]),t._v("、"),s("code",[t._v("ftp:")]),t._v(" 等")]),t._v(" "),s("td",[s("code",[t._v("UrlResource")]),t._v(" 封装了一个 "),s("code",[t._v("java.net.URL")]),t._v(" 对象，"),s("strong",[t._v("用于访问可通过 URL 访问的任何对象")]),t._v("，例如文件、HTTPS 目标、FTP 目标等。所有 URL 都可以通过标准化的字符串形式表示，因此可以使用适当的标准化前缀来指示一种 URL 类型与另一种 URL 类型的区别。 这包括："),s("code",[t._v("file")]),t._v("：用于访问文件系统路径；"),s("code",[t._v("https")]),t._v("：用于通过 HTTPS 协议访问资源；"),s("code",[t._v("ftp")]),t._v("：用于通过 FTP 访问资源等等。")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#resources-implementations-classpathresource",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("ClassPathResource")]),s("OutboundLink")],1)]),t._v(" "),s("td",[s("code",[t._v("classpath:")])]),t._v(" "),s("td",[s("code",[t._v("ClassPathResource")]),t._v(" "),s("strong",[t._v("从类路径上加载资源")]),t._v("。它使用线程上下文加载器、给定的类加载器或指定的 class 类型中的任意一个来加载资源。")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#resources-implementations-filesystemresource",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("FileSystemResource")]),s("OutboundLink")],1)]),t._v(" "),s("td",[s("code",[t._v("file:")])]),t._v(" "),s("td",[s("code",[t._v("FileSystemResource")]),t._v(" "),s("strong",[t._v("是 "),s("code",[t._v("java.io.File")]),t._v(" 的资源实现")]),t._v("。它还支持 "),s("code",[t._v("java.nio.file.Path")]),t._v(" ，应用 Spring 的标准对字符串路径进行转换。"),s("code",[t._v("FileSystemResource")]),t._v(" 支持解析为文件和 URL。")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#resources-implementations-pathresource",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("PathResource")]),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("无")]),t._v(" "),s("td",[s("code",[t._v("PathResource")]),t._v(" 是 "),s("code",[t._v("java.nio.file.Path")]),t._v(" 的资源实现。")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#resources-implementations-servletcontextresource",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("ServletContextResource")]),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("无")]),t._v(" "),s("td",[s("code",[t._v("ServletContextResource")]),t._v(" "),s("strong",[t._v("是 "),s("code",[t._v("ServletContext")]),t._v(" 的资源实现")]),t._v("。它表示相应 Web 应用程序根目录中的相对路径。")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#resources-implementations-inputstreamresource",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("InputStreamResource")]),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("无")]),t._v(" "),s("td",[s("code",[t._v("InputStreamResource")]),t._v(" "),s("strong",[t._v("是指定 "),s("code",[t._v("InputStream")]),t._v(" 的资源实现")]),t._v("。注意：如果该 "),s("code",[t._v("InputStream")]),t._v(" 已被打开，则不可以多次读取该流。")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#resources-implementations-bytearrayresource",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("ByteArrayResource")]),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("无")]),t._v(" "),s("td",[s("code",[t._v("ByteArrayResource")]),t._v(" 是指定的二进制数组的资源实现。它会为给定的字节数组创建一个 "),s("code",[t._v("ByteArrayInputStream")]),t._v("。")])])])]),t._v(" "),s("h2",{attrs:{id:"resourceloader-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resourceloader-接口"}},[t._v("#")]),t._v(" ResourceLoader 接口")]),t._v(" "),s("p",[s("code",[t._v("ResourceLoader")]),t._v(" 接口用于加载 "),s("code",[t._v("Resource")]),t._v(" 对象。其定义如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResourceLoader")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Resource")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassLoader")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Spring 中主要的 ResourceLoader 实现：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/master/snap/20221223164745.png",alt:""}})]),t._v(" "),s("p",[t._v("Spring 中，所有的 "),s("code",[t._v("ApplicationContext")]),t._v(" 都实现了 "),s("code",[t._v("ResourceLoader")]),t._v(" 接口。因此，所有 "),s("code",[t._v("ApplicationContext")]),t._v(" 都可以通过 "),s("code",[t._v("getResource()")]),t._v(" 方法获取 "),s("code",[t._v("Resource")]),t._v(" 实例。")]),t._v(" "),s("p",[t._v("【示例】")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果没有指定资源前缀，Spring 会尝试返回合适的资源")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Resource")]),t._v(" template "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"some/resource/path/myTemplate.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果指定 classpath: 前缀，Spring 会强制使用 ClassPathResource")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Resource")]),t._v(" template "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"classpath:some/resource/path/myTemplate.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果指定 file:、http 等 URL 前缀，Spring 会强制使用 UrlResource")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Resource")]),t._v(" template "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file:///some/resource/path/myTemplate.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Resource")]),t._v(" template "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://myhost.com/resource/path/myTemplate.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("下表列举了 Spring 根据各种位置路径加载资源的策略：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("前缀")]),t._v(" "),s("th",[t._v("样例")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("classpath:")])]),t._v(" "),s("td",[s("code",[t._v("classpath:com/myapp/config.xml")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从类路径加载")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("file:")])]),t._v(" "),s("td",[s("code",[t._v("file:///data/config.xml")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("以 URL 形式从文件系统加载")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("http:")])]),t._v(" "),s("td",[s("code",[t._v("http://myserver/logo.png")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("以 URL 形式加载")])]),t._v(" "),s("tr",[s("td",[t._v("无")]),t._v(" "),s("td",[s("code",[t._v("/data/config.xml")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("由底层的 ApplicationContext 实现决定")])])])]),t._v(" "),s("h2",{attrs:{id:"resourcepatternresolver-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resourcepatternresolver-接口"}},[t._v("#")]),t._v(" ResourcePatternResolver 接口")]),t._v(" "),s("p",[s("code",[t._v("ResourcePatternResolver")]),t._v(" 接口是 "),s("code",[t._v("ResourceLoader")]),t._v(" 接口的扩展，它的作用是定义策略，根据位置模式解析 "),s("code",[t._v("Resource")]),t._v(" 对象。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResourcePatternResolver")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResourceLoader")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CLASSPATH_ALL_URL_PREFIX")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"classpath*:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Resource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" locationPattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("PathMatchingResourcePatternResolver")]),t._v(" 是一个独立的实现，可以在 "),s("code",[t._v("ApplicationContext")]),t._v(" 之外使用，也可以被 "),s("code",[t._v("ResourceArrayPropertyEditor")]),t._v(" 用于填充 "),s("code",[t._v("Resource[]")]),t._v(" bean 属性。"),s("code",[t._v("PathMatchingResourcePatternResolver")]),t._v(" 能够将指定的资源位置路径解析为一个或多个匹配的 "),s("code",[t._v("Resource")]),t._v(" 对象。")]),t._v(" "),s("blockquote",[s("p",[t._v("注意：任何标准 "),s("code",[t._v("ApplicationContext")]),t._v(" 中的默认 "),s("code",[t._v("ResourceLoader")]),t._v(" 实际上是 "),s("code",[t._v("PathMatchingResourcePatternResolver")]),t._v(" 的一个实例，它实现了 "),s("code",[t._v("ResourcePatternResolver")]),t._v(" 接口。")])]),t._v(" "),s("h2",{attrs:{id:"resourceloaderaware-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resourceloaderaware-接口"}},[t._v("#")]),t._v(" ResourceLoaderAware 接口")]),t._v(" "),s("p",[s("code",[t._v("ResourceLoaderAware")]),t._v(" 接口是一个特殊的回调接口，用来标记提供 "),s("code",[t._v("ResourceLoader")]),t._v(" 引用的对象。"),s("code",[t._v("ResourceLoaderAware")]),t._v(" 接口定义如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResourceLoaderAware")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setResourceLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResourceLoader")]),t._v(" resourceLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("当一个类实现 "),s("code",[t._v("ResourceLoaderAware")]),t._v(" 并部署到应用程序上下文中（作为 Spring 管理的 bean）时，它会被应用程序上下文识别为 "),s("code",[t._v("ResourceLoaderAware")]),t._v("，然后，应用程序上下文会调用 "),s("code",[t._v("setResourceLoader(ResourceLoader)")]),t._v("，将自身作为参数提供（请记住，Spring 中的所有应用程序上下文都实现 "),s("code",[t._v("ResourceLoader")]),t._v(" 接口）。")]),t._v(" "),s("p",[t._v("由于 "),s("code",[t._v("ApplicationContext")]),t._v(" 是一个 "),s("code",[t._v("ResourceLoader")]),t._v("，该 bean 还可以实现 "),s("code",[t._v("ApplicationContextAware")]),t._v(" 接口并直接使用提供的应用程序上下文来加载资源。 但是，一般来说，如果您只需要这些，最好使用专门的 "),s("code",[t._v("ResourceLoader")]),t._v(" 接口。 该代码将仅耦合到资源加载接口（可以被视为实用程序接口），而不耦合到整个 Spring "),s("code",[t._v("ApplicationContext")]),t._v(" 接口。")]),t._v(" "),s("p",[t._v("在应用程序中，还可以使用 "),s("code",[t._v("ResourceLoader")]),t._v(" 的自动装配作为实现 "),s("code",[t._v("ResourceLoaderAware")]),t._v(" 接口的替代方法。传统的构造函数和 "),s("code",[t._v("byType")]),t._v(" 自动装配模式能够分别为构造函数参数或 setter 方法参数提供 "),s("code",[t._v("ResourceLoader")]),t._v("。 为了获得更大的灵活性（包括自动装配字段和多参数方法的能力），请考虑使用基于注解的自动装配功能。 在这种情况下，"),s("code",[t._v("ResourceLoader")]),t._v(" 会自动连接到需要 "),s("code",[t._v("ResourceLoader")]),t._v(" 类型的字段、构造函数参数或方法参数中，只要相关字段、构造函数或方法带有 "),s("code",[t._v("@Autowired")]),t._v(" 注解即可。")]),t._v(" "),s("h2",{attrs:{id:"资源依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资源依赖"}},[t._v("#")]),t._v(" 资源依赖")]),t._v(" "),s("p",[t._v("如果 bean 本身要通过某种动态过程来确定和提供资源路径，那么 bean 可以使用 "),s("code",[t._v("ResourceLoader")]),t._v(" 或 "),s("code",[t._v("ResourcePatternResolver")]),t._v(" 接口来加载资源。 例如，考虑加载某种模板，其中所需的特定资源取决于用户的角色。 如果资源是静态的，完全消除 "),s("code",[t._v("ResourceLoader")]),t._v(" 接口（或 "),s("code",[t._v("ResourcePatternResolver")]),t._v(" 接口）的使用，让 bean 公开它需要的 "),s("code",[t._v("Resource")]),t._v(" 属性，并期望将它们注入其中是有意义的。")]),t._v(" "),s("p",[t._v("使注入这些属性变得简单的原因是所有应用程序上下文都注册并使用一个特殊的 JavaBeans "),s("code",[t._v("PropertyEditor")]),t._v("，它可以将 "),s("code",[t._v("String")]),t._v(" 路径转换为 "),s("code",[t._v("Resource")]),t._v(" 对象。 例如，下面的 MyBean 类有一个 "),s("code",[t._v("Resource")]),t._v(" 类型的模板属性。")]),t._v(" "),s("p",[t._v("【示例】")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("myBean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("example.MyBean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("some/resource/path/myTemplate.txt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("请注意，配置中引用的模板资源路径没有前缀，因为应用程序上下文本身将用作 "),s("code",[t._v("ResourceLoader")]),t._v("，资源本身将根据需要通过 "),s("code",[t._v("ClassPathResource")]),t._v("，"),s("code",[t._v("FileSystemResource")]),t._v(" 或 ServletContextResource 加载，具体取决于上下文的确切类型。")]),t._v(" "),s("p",[t._v("如果需要强制使用特定的资源类型，则可以使用前缀。 以下两个示例显示如何强制使用 "),s("code",[t._v("ClassPathResource")]),t._v(" 和 "),s("code",[t._v("UrlResource")]),t._v("（后者用于访问文件系统文件）。")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("classpath:some/resource/path/myTemplate.txt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("file:///some/resource/path/myTemplate.txt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("p",[t._v("可以通过 "),s("code",[t._v("@Value")]),t._v(" 注解加载资源文件 "),s("code",[t._v("myTemplate.txt")]),t._v("，示例如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyBean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Resource")]),t._v(" template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${template.path}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Resource")]),t._v(" template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("template "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Spring 的 "),s("code",[t._v("PropertyEditor")]),t._v(" 会根据资源文件的路径字符串，加载 "),s("code",[t._v("Resource")]),t._v(" 对象，并将其注入到 MyBean 的构造方法。")]),t._v(" "),s("p",[t._v("如果想要加载多个资源文件，可以使用 "),s("code",[t._v("classpath*:")]),t._v(" 前缀，例如："),s("code",[t._v("classpath*:/config/templates/*.txt")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyBean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Resource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" templates"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${templates.path}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Resource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" templates"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("templates "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" templates"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"应用上下文和资源路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用上下文和资源路径"}},[t._v("#")]),t._v(" 应用上下文和资源路径")]),t._v(" "),s("h3",{attrs:{id:"构造应用上下文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造应用上下文"}},[t._v("#")]),t._v(" 构造应用上下文")]),t._v(" "),s("p",[t._v("应用上下文构造函数（针对特定的应用上下文类型）通常将字符串或字符串数组作为资源的位置路径，例如构成上下文定义的 XML 文件。")]),t._v(" "),s("p",[t._v("【示例】")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContext")]),t._v(" ctx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassPathXmlApplicationContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"conf/appContext.xml"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContext")]),t._v(" ctx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileSystemXmlApplicationContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"conf/appContext.xml"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContext")]),t._v(" ctx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileSystemXmlApplicationContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"classpath:conf/appContext.xml"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContext")]),t._v(" ctx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassPathXmlApplicationContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"services.xml"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"daos.xml"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessengerService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"使用通配符构造应用上下文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用通配符构造应用上下文"}},[t._v("#")]),t._v(" 使用通配符构造应用上下文")]),t._v(" "),s("p",[t._v("ApplicationContext 构造器的中的资源路径可以是单一的路径（即一对一地映射到目标资源）；也可以是通配符形式——可包含 classpath*：也可以是前缀或 ant 风格的正则表达式（使用 spring 的 PathMatcher 来匹配）。")]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationContext")]),t._v(" ctx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassPathXmlApplicationContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"classpath*:conf/appContext.xml"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("使用 "),s("code",[t._v("classpath*")]),t._v(" 表示类路径下所有匹配文件名称的资源都会被获取(本质上就是调用了 ClassLoader.getResources(…) 方法），接着将获取到的资源组装成最终的应用上下文。")]),t._v(" "),s("p",[t._v("在位置路径的其余部分，"),s("code",[t._v("classpath*:")]),t._v(" 前缀可以与 PathMatcher 结合使用，如："),s("code",[t._v("classpath*:META-INF/*-beans.xml")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),s("p",[t._v("Spring 配置资源中有哪些常见类型？")]),t._v(" "),s("ul",[s("li",[t._v("XML 资源")]),t._v(" "),s("li",[t._v("Properties 资源")]),t._v(" "),s("li",[t._v("YAML 资源")])]),t._v(" "),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring 官方文档之 Core Technologies"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://time.geekbang.org/course/intro/265",target:"_blank",rel:"noopener noreferrer"}},[t._v("《小马哥讲 Spring 核心编程思想》"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);