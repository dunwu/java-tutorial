(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{437:function(t,e,v){"use strict";v.r(e);var _=v(14),r=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"spring-配置元数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-配置元数据"}},[t._v("#")]),t._v(" Spring 配置元数据")]),t._v(" "),e("h2",{attrs:{id:"spring-配置元信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-配置元信息"}},[t._v("#")]),t._v(" Spring 配置元信息")]),t._v(" "),e("ul",[e("li",[t._v("Spring Bean 配置元信息 - BeanDefinition")]),t._v(" "),e("li",[t._v("Spring Bean 属性元信息 - PropertyValues")]),t._v(" "),e("li",[t._v("Spring 容器配置元信息")]),t._v(" "),e("li",[t._v("Spring 外部化配置元信息 - PropertySource")]),t._v(" "),e("li",[t._v("Spring Profile 元信息 - @Profile")])]),t._v(" "),e("h2",{attrs:{id:"spring-bean-配置元信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-bean-配置元信息"}},[t._v("#")]),t._v(" Spring Bean 配置元信息")]),t._v(" "),e("p",[t._v("Bean 配置元信息 - BeanDefinition")]),t._v(" "),e("ul",[e("li",[t._v("GenericBeanDefinition：通用型 BeanDefinition")]),t._v(" "),e("li",[t._v("RootBeanDefinition：无 Parent 的 BeanDefinition 或者合并后 BeanDefinition")]),t._v(" "),e("li",[t._v("AnnotatedBeanDefinition：注解标注的 BeanDefinition")])]),t._v(" "),e("h2",{attrs:{id:"spring-bean-属性元信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-bean-属性元信息"}},[t._v("#")]),t._v(" Spring Bean 属性元信息")]),t._v(" "),e("ul",[e("li",[t._v("Bean 属性元信息 - PropertyValues\n"),e("ul",[e("li",[t._v("可修改实现 - MutablePropertyValues")]),t._v(" "),e("li",[t._v("元素成员 - PropertyValue")])])]),t._v(" "),e("li",[t._v("Bean 属性上下文存储 - AttributeAccessor")]),t._v(" "),e("li",[t._v("Bean 元信息元素 - BeanMetadataElement")])]),t._v(" "),e("h2",{attrs:{id:"spring-容器配置元信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-容器配置元信息"}},[t._v("#")]),t._v(" Spring 容器配置元信息")]),t._v(" "),e("p",[t._v("Spring XML 配置元信息 - beans 元素相关")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("beans 元素属性")]),t._v(" "),e("th",[t._v("默认值")]),t._v(" "),e("th",[t._v("使用场景")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("profile")]),t._v(" "),e("td",[t._v("null（留空）")]),t._v(" "),e("td",[t._v("Spring Profiles 配置值")])]),t._v(" "),e("tr",[e("td",[t._v("default-lazy-init")]),t._v(" "),e("td",[t._v("default")]),t._v(" "),e("td",[t._v("当 outter beans “default-lazy-init” 属性存在时，继承该值，否则为“false”")])]),t._v(" "),e("tr",[e("td",[t._v("default-merge")]),t._v(" "),e("td",[t._v("default")]),t._v(" "),e("td",[t._v("当 outter beans “default-merge” 属性存在时，继承该值，否则为“false”")])]),t._v(" "),e("tr",[e("td",[t._v("default-autowire")]),t._v(" "),e("td",[t._v("default")]),t._v(" "),e("td",[t._v("当 outter beans “default-autowire” 属性存在时，继承该值，否则为“no”")])]),t._v(" "),e("tr",[e("td",[t._v("default-autowire-candidates")]),t._v(" "),e("td",[t._v("null（留空）")]),t._v(" "),e("td",[t._v("默认 Spring Beans 名称 pattern")])]),t._v(" "),e("tr",[e("td",[t._v("default-init-method")]),t._v(" "),e("td",[t._v("null（留空）")]),t._v(" "),e("td",[t._v("默认 Spring Beans 自定义初始化方法")])]),t._v(" "),e("tr",[e("td",[t._v("default-destroy-method")]),t._v(" "),e("td",[t._v("null（留空）")]),t._v(" "),e("td",[t._v("默认 Spring Beans 自定义销毁方法")])])])]),t._v(" "),e("p",[t._v("Spring XML 配置元信息 - 应用上下文相关")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("XML 元素")]),t._v(" "),e("th",[t._v("使用场景")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("<context:annotation-config />")])]),t._v(" "),e("td",[t._v("激活 Spring 注解驱动")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<context:component-scan />")])]),t._v(" "),e("td",[t._v("Spring @Component 以及自定义注解扫描")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<context:load-time-weaver />")])]),t._v(" "),e("td",[t._v("激活 Spring LoadTimeWeaver")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<context:mbean-export />")])]),t._v(" "),e("td",[t._v("暴露 Spring Beans 作为 JMX Beans")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<context:mbean-server />")])]),t._v(" "),e("td",[t._v("将当前平台作为 MBeanServer")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<context:property-placeholder />")])]),t._v(" "),e("td",[t._v("加载外部化配置资源作为 Spring 属性配")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<context:property-override />")])]),t._v(" "),e("td",[t._v("利用外部化配置资源覆盖 Spring 属")])])])]),t._v(" "),e("h2",{attrs:{id:"基于-xml-文件装载-spring-bean-配置元信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于-xml-文件装载-spring-bean-配置元信息"}},[t._v("#")]),t._v(" 基于 XML 文件装载 Spring Bean 配置元信息")]),t._v(" "),e("p",[t._v("底层实现 - XmlBeanDefinitionReader")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("XML 元素")]),t._v(" "),e("th",[t._v("使用场景")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("<beans:beans />")])]),t._v(" "),e("td",[t._v("单 XML 资源下的多个 Spring Beans 配置")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<beans:bean />")])]),t._v(" "),e("td",[t._v("单个 Spring Bean 定义（BeanDefinition）配置")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<beans:alias />")])]),t._v(" "),e("td",[t._v("为 Spring Bean 定义（BeanDefinition）映射别名")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<beans:import />")])]),t._v(" "),e("td",[t._v("加载外部 Spring XML 配置资源")])])])]),t._v(" "),e("h2",{attrs:{id:"基于-properties-文件装载-spring-bean-配置元信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于-properties-文件装载-spring-bean-配置元信息"}},[t._v("#")]),t._v(" 基于 Properties 文件装载 Spring Bean 配置元信息")]),t._v(" "),e("p",[t._v("底层实现 - PropertiesBeanDefinitionReader")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Properties 属性名")]),t._v(" "),e("th",[t._v("使用场景")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("class")])]),t._v(" "),e("td",[t._v("Bean 类全称限定名")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("abstract")])]),t._v(" "),e("td",[t._v("是否为抽象的 BeanDefinition")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("parent")])]),t._v(" "),e("td",[t._v("指定 parent BeanDefinition 名称")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("lazy-init")])]),t._v(" "),e("td",[t._v("是否为延迟初始化")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("ref")])]),t._v(" "),e("td",[t._v("引用其他 Bean 的名称")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("scope")])]),t._v(" "),e("td",[t._v("设置 Bean 的 scope 属性")])]),t._v(" "),e("tr",[e("td",[t._v("${n}")]),t._v(" "),e("td",[t._v("n 表示第 n+1 个构造器参数")])])])]),t._v(" "),e("h2",{attrs:{id:"基于-java-注解装载-spring-bean-配置元信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于-java-注解装载-spring-bean-配置元信息"}},[t._v("#")]),t._v(" 基于 Java 注解装载 Spring Bean 配置元信息")]),t._v(" "),e("p",[t._v("Spring 模式注解")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Spring 注解")]),t._v(" "),e("th",[t._v("场景说明")]),t._v(" "),e("th",[t._v("起始版本")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("@Repository")])]),t._v(" "),e("td",[t._v("数据仓储模式注解")]),t._v(" "),e("td",[t._v("2.0")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("@Component")])]),t._v(" "),e("td",[t._v("通用组件模式注解")]),t._v(" "),e("td",[t._v("2.5")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("@Service")])]),t._v(" "),e("td",[t._v("服务模式注解")]),t._v(" "),e("td",[t._v("2.5")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("@Controller")])]),t._v(" "),e("td",[t._v("Web 控制器模式注解")]),t._v(" "),e("td",[t._v("2.5")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("@Configuration")])]),t._v(" "),e("td",[t._v("配置类模式注解")]),t._v(" "),e("td",[t._v("3.0")])])])]),t._v(" "),e("p",[t._v("Spring Bean 定义注解")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Spring 注解")]),t._v(" "),e("th",[t._v("场景说明")]),t._v(" "),e("th",[t._v("起始版本")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("@Bean")])]),t._v(" "),e("td",[t._v("替换 XML 元素 "),e("code",[t._v("<bean>")])]),t._v(" "),e("td",[t._v("3.0")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("@DependsOn")])]),t._v(" "),e("td",[t._v("替代 XML 属性 "),e("code",[t._v('<bean depends-on="..."/>')])]),t._v(" "),e("td",[t._v("3.0")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("@Lazy")])]),t._v(" "),e("td",[t._v("替代 XML 属性 "),e("code",[t._v('<bean lazy-init="true | falses" />')])]),t._v(" "),e("td",[t._v("3.0")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("@Primary")])]),t._v(" "),e("td",[t._v("替换 XML 元素 "),e("code",[t._v('<bean primary="true | false" />')])]),t._v(" "),e("td",[t._v("3.0")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("@Role")])]),t._v(" "),e("td",[t._v("替换 XML 元素 "),e("code",[t._v('<bean role="..." />')])]),t._v(" "),e("td",[t._v("3.1")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("@Lookup")])]),t._v(" "),e("td",[t._v("替代 XML 属性 "),e("code",[t._v('<bean lookup-method="...">')])]),t._v(" "),e("td",[t._v("4.1")])])])]),t._v(" "),e("p",[t._v("Spring Bean 依赖注入注解")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Spring 注解")]),t._v(" "),e("th",[t._v("场景说明")]),t._v(" "),e("th",[t._v("起始版本")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("@Autowired")])]),t._v(" "),e("td",[t._v("Bean 依赖注入，支持多种依赖查找方式")]),t._v(" "),e("td",[t._v("2.5")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("@Qualifier")])]),t._v(" "),e("td",[t._v("细粒度的 @Autowired 依赖查找")]),t._v(" "),e("td",[t._v("2.5")])])])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Java 注解")]),t._v(" "),e("th",[t._v("场景说明")]),t._v(" "),e("th",[t._v("起始版本")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("@Resource")]),t._v(" "),e("td",[t._v("类似于 @Autowired")]),t._v(" "),e("td",[t._v("2.5")])]),t._v(" "),e("tr",[e("td",[t._v("@Inject")]),t._v(" "),e("td",[t._v("类似于 @Autowired")]),t._v(" "),e("td",[t._v("2.5")])])])]),t._v(" "),e("p",[t._v("Spring Bean 条件装配注解")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Spring 注解")]),t._v(" "),e("th",[t._v("场景说明")]),t._v(" "),e("th",[t._v("起始版本")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("@Profile")]),t._v(" "),e("td",[t._v("配置化条件装配")]),t._v(" "),e("td",[t._v("3.1")])]),t._v(" "),e("tr",[e("td",[t._v("@Conditional")]),t._v(" "),e("td",[t._v("编程条件装配")]),t._v(" "),e("td",[t._v("4.0")])])])]),t._v(" "),e("p",[t._v("Spring Bean 生命周期回调注解")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Spring 注解")]),t._v(" "),e("th",[t._v("场景说明")]),t._v(" "),e("th",[t._v("起始版本")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("@PostConstruct")]),t._v(" "),e("td",[t._v("替换 XML 元素 "),e("bean",{attrs:{"init-method":"..."}}),t._v(" 或 InitializingBean")],1),t._v(" "),e("td",[t._v("2.5")])]),t._v(" "),e("tr",[e("td",[t._v("@PreDestroy")]),t._v(" "),e("td",[t._v("替换 XML 元素 "),e("bean",{attrs:{"destroy-method":"..."}}),t._v(" 或 DisposableBean")],1),t._v(" "),e("td",[t._v("2.5")])])])]),t._v(" "),e("p",[t._v("Spring BeanDefinition 解析与注册")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Spring 注解")]),t._v(" "),e("th",[t._v("场景说明")]),t._v(" "),e("th",[t._v("起始版本")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("XML 资源")]),t._v(" "),e("td",[t._v("XmlBeanDefinitionReader")]),t._v(" "),e("td",[t._v("1.0")])]),t._v(" "),e("tr",[e("td",[t._v("Properties 资源")]),t._v(" "),e("td",[t._v("PropertiesBeanDefinitionReader")]),t._v(" "),e("td",[t._v("1.0")])]),t._v(" "),e("tr",[e("td",[t._v("Java 注解")]),t._v(" "),e("td",[t._v("AnnotatedBeanDefinitionReader")]),t._v(" "),e("td",[t._v("3.0")])])])]),t._v(" "),e("h2",{attrs:{id:"spring-bean-配置元信息底层实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-bean-配置元信息底层实现"}},[t._v("#")]),t._v(" Spring Bean 配置元信息底层实现")]),t._v(" "),e("h3",{attrs:{id:"spring-xml-资源-beandefinition-解析与注册"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-xml-资源-beandefinition-解析与注册"}},[t._v("#")]),t._v(" Spring XML 资源 BeanDefinition 解析与注册")]),t._v(" "),e("p",[t._v("核心 API - XmlBeanDefinitionReader")]),t._v(" "),e("ul",[e("li",[t._v("资源 - Resource")]),t._v(" "),e("li",[t._v("底层 - BeanDefinitionDocumentReader\n"),e("ul",[e("li",[t._v("XML 解析 - Java DOM Level 3 API")]),t._v(" "),e("li",[t._v("BeanDefinition 解析 - BeanDefinitionParserDelegate")]),t._v(" "),e("li",[t._v("BeanDefinition 注册 - BeanDefinitionRegistry")])])])]),t._v(" "),e("h3",{attrs:{id:"spring-properties-资源-beandefinition-解析与注册"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-properties-资源-beandefinition-解析与注册"}},[t._v("#")]),t._v(" Spring Properties 资源 BeanDefinition 解析与注册")]),t._v(" "),e("p",[t._v("核心 API - PropertiesBeanDefinitionReader")]),t._v(" "),e("ul",[e("li",[t._v("资源\n"),e("ul",[e("li",[t._v("字节流 - Resource")]),t._v(" "),e("li",[t._v("字符流 - EncodedResouce")])])]),t._v(" "),e("li",[t._v("底层\n"),e("ul",[e("li",[t._v("存储 - java.util.Properties")]),t._v(" "),e("li",[t._v("BeanDefinition 解析 - API 内部实现")]),t._v(" "),e("li",[t._v("BeanDefinition 注册 - BeanDefinitionRegistry")])])])]),t._v(" "),e("h3",{attrs:{id:"spring-java-注册-beandefinition-解析与注册"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-java-注册-beandefinition-解析与注册"}},[t._v("#")]),t._v(" Spring Java 注册 BeanDefinition 解析与注册")]),t._v(" "),e("p",[t._v("核心 API - AnnotatedBeanDefinitionReader")]),t._v(" "),e("ul",[e("li",[t._v("资源\n"),e("ul",[e("li",[t._v("类对象 - java.lang.Class")])])]),t._v(" "),e("li",[t._v("底层\n"),e("ul",[e("li",[t._v("条件评估 - ConditionEvaluator")]),t._v(" "),e("li",[t._v("Bean 范围解析 - ScopeMetadataResolver")]),t._v(" "),e("li",[t._v("BeanDefinition 解析 - 内部 API 实现")]),t._v(" "),e("li",[t._v("BeanDefinition 处理 - AnnotationConfigUtils.processCommonDefinitionAnnotations")]),t._v(" "),e("li",[t._v("BeanDefinition 注册 - BeanDefinitionRegistry")])])])]),t._v(" "),e("h2",{attrs:{id:"基于-xml-文件装载-spring-ioc-容器配置元信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于-xml-文件装载-spring-ioc-容器配置元信息"}},[t._v("#")]),t._v(" 基于 XML 文件装载 Spring IoC 容器配置元信息")]),t._v(" "),e("p",[t._v("Spring IoC 容器相关 XML 配置")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("命名空间")]),t._v(" "),e("th",[t._v("所属模块")]),t._v(" "),e("th",[t._v("Schema 资源 URL")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("beans")]),t._v(" "),e("td",[t._v("spring-beans")]),t._v(" "),e("td",[t._v("https://www.springframework.org/schema/beans/spring-beans.xsd")])]),t._v(" "),e("tr",[e("td",[t._v("context")]),t._v(" "),e("td",[t._v("spring-context")]),t._v(" "),e("td",[t._v("https://www.springframework.org/schema/context/spring-context.xsd")])]),t._v(" "),e("tr",[e("td",[t._v("aop")]),t._v(" "),e("td",[t._v("spring-aop")]),t._v(" "),e("td",[t._v("https://www.springframework.org/schema/aop/spring-aop.xsd")])]),t._v(" "),e("tr",[e("td",[t._v("tx")]),t._v(" "),e("td",[t._v("spring-tx")]),t._v(" "),e("td",[t._v("https://www.springframework.org/schema/tx/spring-tx.xsd")])]),t._v(" "),e("tr",[e("td",[t._v("util")]),t._v(" "),e("td",[t._v("spring-beans")]),t._v(" "),e("td",[t._v("beans https://www.springframework.org/schema/util/spring-util.xsd")])]),t._v(" "),e("tr",[e("td",[t._v("tool")]),t._v(" "),e("td",[t._v("spring-beans")]),t._v(" "),e("td",[t._v("https://www.springframework.org/schema/tool/spring-tool.xsd")])])])]),t._v(" "),e("h2",{attrs:{id:"基于-java-注解装载-spring-ioc-容器配置元信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于-java-注解装载-spring-ioc-容器配置元信息"}},[t._v("#")]),t._v(" 基于 Java 注解装载 Spring IoC 容器配置元信息")]),t._v(" "),e("p",[t._v("Spring IoC 容器装配注解")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Spring 注解")]),t._v(" "),e("th",[t._v("场景说明")]),t._v(" "),e("th",[t._v("起始版本")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("@ImportResource")]),t._v(" "),e("td",[t._v("替换 XML 元素 "),e("code",[t._v("<import>")])]),t._v(" "),e("td",[t._v("3.0")])]),t._v(" "),e("tr",[e("td",[t._v("@Import")]),t._v(" "),e("td",[t._v("导入 Configuration Class")]),t._v(" "),e("td",[t._v("3.0")])]),t._v(" "),e("tr",[e("td",[t._v("@ComponentScan")]),t._v(" "),e("td",[t._v("扫描指定 package 下标注 Spring 模式注解的类")]),t._v(" "),e("td",[t._v("3.1")])])])]),t._v(" "),e("p",[t._v("Spring IoC 配属属性注解")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Spring 注解")]),t._v(" "),e("th",[t._v("场景说明")]),t._v(" "),e("th",[t._v("起始版本")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("@PropertySource")]),t._v(" "),e("td",[t._v("配置属性抽象 PropertySource 注解")]),t._v(" "),e("td",[t._v("3.1")])]),t._v(" "),e("tr",[e("td",[t._v("@PropertySources")]),t._v(" "),e("td",[t._v("@PropertySource 集合注解")]),t._v(" "),e("td",[t._v("4.0")])])])]),t._v(" "),e("h2",{attrs:{id:"基于-extensible-xml-authoring-扩展-springxml-元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于-extensible-xml-authoring-扩展-springxml-元素"}},[t._v("#")]),t._v(" 基于 Extensible XML authoring 扩展 SpringXML 元素")]),t._v(" "),e("p",[t._v("Spring XML 扩展")]),t._v(" "),e("ul",[e("li",[t._v("编写 XML Schema 文件：定义 XML 结构")]),t._v(" "),e("li",[t._v("自定义 NamespaceHandler 实现：命名空间绑定")]),t._v(" "),e("li",[t._v("自定义 BeanDefinitionParser 实现：XML 元素与 BeanDefinition 解析")]),t._v(" "),e("li",[t._v("注册 XML 扩展：命名空间与 XML Schema 映射")])]),t._v(" "),e("h2",{attrs:{id:"extensible-xml-authoring-扩展原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#extensible-xml-authoring-扩展原理"}},[t._v("#")]),t._v(" Extensible XML authoring 扩展原理")]),t._v(" "),e("h3",{attrs:{id:"触发时机"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#触发时机"}},[t._v("#")]),t._v(" 触发时机")]),t._v(" "),e("ul",[e("li",[t._v("AbstractApplicationContext#obtainFreshBeanFactory\n"),e("ul",[e("li",[t._v("AbstractRefreshableApplicationContext#refreshBeanFactory\n"),e("ul",[e("li",[t._v("AbstractXmlApplicationContext#loadBeanDefinitions\n"),e("ul",[e("li",[t._v("...\n"),e("ul",[e("li",[t._v("XmlBeanDefinitionReader#doLoadBeanDefinitions\n"),e("ul",[e("li",[t._v("...\n"),e("ul",[e("li",[t._v("BeanDefinitionParserDelegate#parseCustomElement")])])])])])])])])])])])])])]),t._v(" "),e("h3",{attrs:{id:"核心流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心流程"}},[t._v("#")]),t._v(" 核心流程")]),t._v(" "),e("p",[t._v("BeanDefinitionParserDelegate#parseCustomElement(org.w3c.dom.Element, BeanDefinition)")]),t._v(" "),e("ul",[e("li",[t._v("获取 namespace")]),t._v(" "),e("li",[t._v("通过 namespace 解析 NamespaceHandler")]),t._v(" "),e("li",[t._v("构造 ParserContext")]),t._v(" "),e("li",[t._v("解析元素，获取 BeanDefinintion")])]),t._v(" "),e("h2",{attrs:{id:"基于-properties-文件装载外部化配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于-properties-文件装载外部化配置"}},[t._v("#")]),t._v(" 基于 Properties 文件装载外部化配置")]),t._v(" "),e("p",[t._v("注解驱动")]),t._v(" "),e("ul",[e("li",[t._v("@org.springframework.context.annotation.PropertySource")]),t._v(" "),e("li",[t._v("@org.springframework.context.annotation.PropertySources")])]),t._v(" "),e("p",[t._v("API 编程")]),t._v(" "),e("ul",[e("li",[t._v("org.springframework.core.env.PropertySource")]),t._v(" "),e("li",[t._v("org.springframework.core.env.PropertySources")])]),t._v(" "),e("h2",{attrs:{id:"基于-yaml-文件装载外部化配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于-yaml-文件装载外部化配置"}},[t._v("#")]),t._v(" 基于 YAML 文件装载外部化配置")]),t._v(" "),e("p",[t._v("API 编程")]),t._v(" "),e("ul",[e("li",[t._v("org.springframework.beans.factory.config.YamlProcessor\n"),e("ul",[e("li",[t._v("org.springframework.beans.factory.config.YamlMapFactoryBean")]),t._v(" "),e("li",[t._v("org.springframework.beans.factory.config.YamlPropertiesFactoryBean")])])])]),t._v(" "),e("h2",{attrs:{id:"问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),e("p",[e("strong",[t._v("Spring 內建 XML Schema 常见有哪些")]),t._v("？")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("命名空间")]),t._v(" "),e("th",[t._v("所属模块")]),t._v(" "),e("th",[t._v("Schema 资源 URL")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("beans")]),t._v(" "),e("td",[t._v("spring-beans")]),t._v(" "),e("td",[t._v("https://www.springframework.org/schema/beans/spring-beans.xsd")])]),t._v(" "),e("tr",[e("td",[t._v("context")]),t._v(" "),e("td",[t._v("spring-context")]),t._v(" "),e("td",[t._v("https://www.springframework.org/schema/context/spring-context.xsd")])]),t._v(" "),e("tr",[e("td",[t._v("aop")]),t._v(" "),e("td",[t._v("spring-aop")]),t._v(" "),e("td",[t._v("https://www.springframework.org/schema/aop/spring-aop.xsd")])]),t._v(" "),e("tr",[e("td",[t._v("tx")]),t._v(" "),e("td",[t._v("spring-tx")]),t._v(" "),e("td",[t._v("https://www.springframework.org/schema/tx/spring-tx.xsd")])]),t._v(" "),e("tr",[e("td",[t._v("util")]),t._v(" "),e("td",[t._v("spring-beans")]),t._v(" "),e("td",[t._v("beans https://www.springframework.org/schema/util/spring-util.xsd")])]),t._v(" "),e("tr",[e("td",[t._v("tool")]),t._v(" "),e("td",[t._v("spring-beans")]),t._v(" "),e("td",[t._v("https://www.springframework.org/schema/tool/spring-tool.xsd")])])])]),t._v(" "),e("p",[e("strong",[t._v("Spring 配置元信息具体有哪些")]),t._v("？")]),t._v(" "),e("ul",[e("li",[t._v("Bean 配置元信息：通过媒介（如 XML、Proeprties 等），解析 BeanDefinition")]),t._v(" "),e("li",[t._v("IoC 容器配置元信息：通过媒介（如 XML、Proeprties 等），控制 IoC 容器行为，比如注解驱动、AOP 等")]),t._v(" "),e("li",[t._v("外部化配置：通过资源抽象（如 Proeprties、YAML 等），控制 PropertySource")]),t._v(" "),e("li",[t._v("Spring Profile：通过外部化配置，提供条件分支流程")])]),t._v(" "),e("p",[e("strong",[t._v("Extensible XML authoring 的缺点")]),t._v("？")]),t._v(" "),e("ul",[e("li",[t._v("高复杂度：开发人员需要熟悉 XML Schema，spring.handlers，spring.schemas 以及 Spring API")]),t._v(" "),e("li",[t._v("嵌套元素支持较弱：通常需要使用方法递归或者其嵌套解析的方式处理嵌套（子）元素")]),t._v(" "),e("li",[t._v("XML 处理性能较差：Spring XML 基于 DOM Level 3 API 实现，该 API 便于理解，然而性能较差")]),t._v(" "),e("li",[t._v("XML 框架移植性差：很难适配高性能和便利性的 XML 框架，如 JAXB")])]),t._v(" "),e("h2",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring 官方文档之 Core Technologies"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://time.geekbang.org/course/intro/265",target:"_blank",rel:"noopener noreferrer"}},[t._v("《小马哥讲 Spring 核心编程思想》"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=r.exports}}]);