(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{486:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"spring-security-快速入门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-security-快速入门"}},[t._v("#")]),t._v(" Spring Security 快速入门")]),t._v(" "),s("h2",{attrs:{id:"快速开始"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快速开始"}},[t._v("#")]),t._v(" 快速开始")]),t._v(" "),s("p",[t._v("参考："),s("a",{attrs:{href:"https://spring.io/guides/gs/securing-web/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Securing a Web Application"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"核心-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心-api"}},[t._v("#")]),t._v(" 核心 API")]),t._v(" "),s("h2",{attrs:{id:"设计原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计原理"}},[t._v("#")]),t._v(" 设计原理")]),t._v(" "),s("p",[t._v("Spring Security 对于 Servlet 的支持基于过滤链（"),s("code",[t._v("FilterChain")]),t._v("）实现。")]),t._v(" "),s("p",[t._v("Spring 提供了一个名为 "),s("code",[t._v("DelegatingFilterProxy")]),t._v(" 的 "),s("code",[t._v("Filter")]),t._v(" 实现，该实现允许在 Servlet 容器的生命周期和 Spring 的 "),s("code",[t._v("ApplicationContext")]),t._v(" 之间进行桥接。 Servlet 容器允许使用其自己的标准注册 Filters，但它不了解 Spring 定义的 Bean。 "),s("code",[t._v("DelegatingFilterProxy")]),t._v(" 可以通过标准的 Servlet 容器机制进行注册，但是可以将所有工作委托给实现 Filter 的 Spring Bean。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doFilter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletRequest")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletResponse")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FilterChain")]),t._v(" chain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Lazily get Filter that was registered as a Spring Bean")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// For the example in DelegatingFilterProxy delegate is an instance of Bean Filter0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Filter")]),t._v(" delegate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFilterBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someBeanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// delegate work to the Spring Bean")]),t._v("\n    delegate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doFilter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("FilterChainProxy")]),t._v(" 使用 "),s("code",[t._v("SecurityFilterChain")]),t._v(" 确定应对此请求调用哪些 Spring Security 过滤器。")]),t._v(" "),s("p",[s("code",[t._v("SecurityFilterChain")]),t._v(" 中的安全过滤器通常是 Bean，但它们是使用 "),s("code",[t._v("FilterChainProxy")]),t._v(" 而不是 "),s("code",[t._v("DelegatingFilterProxy")]),t._v(" 注册的。")]),t._v(" "),s("p",[t._v("实际上，"),s("code",[t._v("FilterChainProxy")]),t._v(" 可用于确定应使用哪个 "),s("code",[t._v("SecurityFilterChain")]),t._v("。如果您的应用程序可以为不同的模块提供完全独立的配置。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://docs.spring.io/spring-security/site/docs/5.3.0.RELEASE/reference/html5/images/servlet/architecture/multi-securityfilterchain.png",alt:"multi securityfilterchain"}})]),t._v(" "),s("p",[t._v("ExceptionTranslationFilter 可以将 AccessDeniedException 和 AuthenticationException 转换为 HTTP 响应。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://docs.spring.io/spring-security/site/docs/5.3.0.RELEASE/reference/html5/images/servlet/architecture/exceptiontranslationfilter.png",alt:"exceptiontranslationfilter"}})]),t._v(" "),s("p",[t._v("核心源码：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    filterChain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doFilter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AccessDeniedException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthenticationException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("authenticated "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthenticationException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("startAuthentication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("accessDenied")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"认证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#认证"}},[t._v("#")]),t._v(" 认证")]),t._v(" "),s("h3",{attrs:{id:"数据模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据模型"}},[t._v("#")]),t._v(" 数据模型")]),t._v(" "),s("p",[t._v("Spring Security 框架中的认证数据模型如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/master/snap/20200331115710.png",alt:"img"}})]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Authentication")]),t._v(" - 认证信息实体。\n"),s("ul",[s("li",[s("code",[t._v("principal")]),t._v(" - 用户标识。如：用户名、账户名等。通常是 "),s("code",[t._v("UserDetails")]),t._v(" 的实例（后面详细讲解）。")]),t._v(" "),s("li",[s("code",[t._v("credentials")]),t._v(" - 认证凭证。如：密码等。")]),t._v(" "),s("li",[s("code",[t._v("authorities")]),t._v(" - 授权信息。如：用户的角色、权限等信息。")])])]),t._v(" "),s("li",[s("code",[t._v("SecurityContext")]),t._v(" - 安全上下文。包含一个 "),s("code",[t._v("Authentication")]),t._v(" 对象。")]),t._v(" "),s("li",[s("code",[t._v("SecurityContextHolder")]),t._v(" - 安全上下文持有者。用于存储认证信息。")])]),t._v(" "),s("p",[t._v("【示例】注册认证信息")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SecurityContext")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SecurityContextHolder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createEmptyContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Authentication")]),t._v(" authentication "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestingAuthenticationToken")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ROLE_USER"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncontext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAuthentication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("authentication"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SecurityContextHolder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("【示例】访问认证信息")]),t._v(" "),s("h3",{attrs:{id:"认证基本流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#认证基本流程"}},[t._v("#")]),t._v(" 认证基本流程")]),t._v(" "),s("p",[t._v("AbstractAuthenticationProcessingFilter 用作验证用户凭据的基本过滤器。 在对凭证进行身份验证之前，Spring Security 通常使用 AuthenticationEntryPoint 请求凭证。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://docs.spring.io/spring-security/site/docs/5.3.0.RELEASE/reference/html5/images/servlet/authentication/architecture/abstractauthenticationprocessingfilter.png",alt:"abstractauthenticationprocessingfilter"}})]),t._v(" "),s("ul",[s("li",[t._v("（1）当用户提交其凭据时，"),s("code",[t._v("AbstractAuthenticationProcessingFilter")]),t._v(" 从要验证的 "),s("code",[t._v("HttpServletRequest")]),t._v(" 创建一个 "),s("code",[t._v("Authentication")]),t._v("。创建的身份验证类型取决于 "),s("code",[t._v("AbstractAuthenticationProcessingFilter")]),t._v(" 的子类。例如，"),s("code",[t._v("UsernamePasswordAuthenticationFilter")]),t._v(" 根据在 "),s("code",[t._v("HttpServletRequest")]),t._v(" 中提交的用户名和密码来创建 "),s("code",[t._v("UsernamePasswordAuthenticationToken")]),t._v("。")]),t._v(" "),s("li",[t._v("（2）接下来，将身份验证传递到 "),s("code",[t._v("AuthenticationManager")]),t._v(" 进行身份验证。")]),t._v(" "),s("li",[t._v("（3）如果身份验证失败，则认证失败\n"),s("ul",[s("li",[t._v("清除 "),s("code",[t._v("SecurityContextHolder")]),t._v("。")]),t._v(" "),s("li",[t._v("调用 "),s("code",[t._v("RememberMeServices.loginFail")]),t._v("。如果没有配置 remember me，则为空。")]),t._v(" "),s("li",[t._v("调用 "),s("code",[t._v("AuthenticationFailureHandler")]),t._v("。")])])]),t._v(" "),s("li",[t._v("（4）如果身份验证成功，则认证成功。\n"),s("ul",[s("li",[t._v("如果是新的登录，则通知 "),s("code",[t._v("SessionAuthenticationStrategy")]),t._v("。")]),t._v(" "),s("li",[t._v("身份验证是在 "),s("code",[t._v("SecurityContextHolder")]),t._v(" 上设置的。之后，"),s("code",[t._v("SecurityContextPersistenceFilter")]),t._v(" 将 "),s("code",[t._v("SecurityContext")]),t._v(" 保存到 "),s("code",[t._v("HttpSession")]),t._v(" 中。")]),t._v(" "),s("li",[t._v("调用 "),s("code",[t._v("RememberMeServices.loginSuccess")]),t._v("。如果没有配置 remember me，则为空。")]),t._v(" "),s("li",[s("code",[t._v("ApplicationEventPublisher")]),t._v(" 发布一个 "),s("code",[t._v("InteractiveAuthenticationSuccessEvent")]),t._v("。")])])])]),t._v(" "),s("h3",{attrs:{id:"用户名-密码认证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用户名-密码认证"}},[t._v("#")]),t._v(" 用户名/密码认证")]),t._v(" "),s("p",[t._v("读取用户名和密码的方式：")]),t._v(" "),s("ul",[s("li",[t._v("表单")]),t._v(" "),s("li",[t._v("基本认证")]),t._v(" "),s("li",[t._v("数字认证")])]),t._v(" "),s("p",[t._v("存储机制")]),t._v(" "),s("ul",[s("li",[t._v("内存")]),t._v(" "),s("li",[t._v("JDBC")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://docs.spring.io/spring-security/site/docs/5.3.0.RELEASE/reference/html5/#servlet-authentication-userdetailsservice",target:"_blank",rel:"noopener noreferrer"}},[t._v("UserDetailsService"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("LDAP")])]),t._v(" "),s("h4",{attrs:{id:"表单认证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表单认证"}},[t._v("#")]),t._v(" 表单认证")]),t._v(" "),s("p",[t._v("spring security 支持通过从 html 表单获取登录时提交的用户名、密码。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://docs.spring.io/spring-security/site/docs/5.3.0.RELEASE/reference/html5/images/servlet/authentication/unpwd/loginurlauthenticationentrypoint.png",alt:"loginurlauthenticationentrypoint"}})]),t._v(" "),s("p",[t._v("一旦，登录信息被提交，"),s("code",[t._v("UsernamePasswordAuthenticationFilter")]),t._v(" 就会验证用户名和密码。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://docs.spring.io/spring-security/site/docs/5.3.0.RELEASE/reference/html5/images/servlet/authentication/unpwd/usernamepasswordauthenticationfilter.png",alt:"usernamepasswordauthenticationfilter"}})]),t._v(" "),s("h4",{attrs:{id:"基本认证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本认证"}},[t._v("#")]),t._v(" 基本认证")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("configure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpSecurity")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    http\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("httpBasic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withDefaults")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"内存认证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存认证"}},[t._v("#")]),t._v(" 内存认证")]),t._v(" "),s("p",[s("code",[t._v("InMemoryUserDetailsManager")]),t._v(" 实现了 "),s("a",{attrs:{href:"https://docs.spring.io/spring-security/site/docs/5.3.0.RELEASE/reference/html5/#servlet-authentication-userdetailsservice",target:"_blank",rel:"noopener noreferrer"}},[t._v("UserDetailsService"),s("OutboundLink")],1),t._v(" ，提供了基本的用户名、密码认证，其认证数据存储在内存中。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserDetailsService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The builder will ensure the passwords are encoded before saving in memory")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserBuilder")]),t._v(" users "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withDefaultPasswordEncoder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserDetails")]),t._v(" user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" users\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"USER"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserDetails")]),t._v(" user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" users\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"USER"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ADMIN"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InMemoryUserDetailsManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" admin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"jdbc-认证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdbc-认证"}},[t._v("#")]),t._v(" JDBC 认证")]),t._v(" "),s("p",[t._v("JdbcUserDetailsManager 实现了 "),s("a",{attrs:{href:"https://docs.spring.io/spring-security/site/docs/5.3.0.RELEASE/reference/html5/#servlet-authentication-userdetailsservice",target:"_blank",rel:"noopener noreferrer"}},[t._v("UserDetailsService"),s("OutboundLink")],1),t._v(" ，提供了基本的用户名、密码认证，其认证数据存储在关系型数据库中，通过 JDBC 方式访问。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('@Bean\nUserDetailsManager users(DataSource dataSource) {\n    UserDetails user = User.builder()\n        .username("user")\n        .password("{bcrypt}$2a$10$GRLdNijSQMUvl/au9ofL.eDwmoohzzS7.rmNSJZ.0FxO/BTk76klW")\n        .roles("USER")\n        .build();\n    UserDetails admin = User.builder()\n        .username("admin")\n        .password("{bcrypt}$2a$10$GRLdNijSQMUvl/au9ofL.eDwmoohzzS7.rmNSJZ.0FxO/BTk76klW")\n        .roles("USER", "ADMIN")\n        .build();\n    JdbcUserDetailsManager users = new JdbcUserDetailsManager(dataSource);\n    users.createUser()\n}\n')])])]),s("p",[t._v("基本的 scheam：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" users"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    username varchar_ignorecase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    password varchar_ignorecase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    enabled "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" authorities "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    username varchar_ignorecase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    authority varchar_ignorecase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constraint")]),t._v(" fk_authorities_users "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreign")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("references")]),t._v(" users"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unique")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" ix_auth_username "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" authorities "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("authority"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"userdetailsservice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#userdetailsservice"}},[t._v("#")]),t._v(" UserDetailsService")]),t._v(" "),s("p",[s("code",[t._v("UserDetails")]),t._v(" 由 "),s("code",[t._v("UserDetailsService")]),t._v(" 返回。 "),s("code",[t._v("DaoAuthenticationProvider")]),t._v(" 验证 "),s("code",[t._v("UserDetails")]),t._v("，然后返回身份验证，该身份验证的主体是已配置的 "),s("code",[t._v("UserDetailsService")]),t._v(" 返回的 "),s("code",[t._v("UserDetails")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("DaoAuthenticationProvider")]),t._v(" 使用 "),s("code",[t._v("UserDetailsService")]),t._v(" 检索用户名，密码和其他用于使用用户名和密码进行身份验证的属性。 Spring Security 提供 "),s("code",[t._v("UserDetailsService")]),t._v(" 的内存中和 JDBC 实现。")]),t._v(" "),s("p",[t._v("您可以通过将自定义 "),s("code",[t._v("UserDetailsService")]),t._v(" 公开为 bean 来定义自定义身份验证。")]),t._v(" "),s("h4",{attrs:{id:"passwordencoder"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#passwordencoder"}},[t._v("#")]),t._v(" PasswordEncoder")]),t._v(" "),s("p",[t._v("Spring Security 的 servlet 支持通过与 "),s("code",[t._v("PasswordEncoder")]),t._v(" 集成来安全地存储密码。 可以通过公开一个 PasswordEncoder Bean 来定制 Spring Security 使用的 PasswordEncoder 实现。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://docs.spring.io/spring-security/site/docs/5.3.0.RELEASE/reference/html5/images/servlet/authentication/unpwd/daoauthenticationprovider.png",alt:"daoauthenticationprovider"}})]),t._v(" "),s("h3",{attrs:{id:"remember-me"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remember-me"}},[t._v("#")]),t._v(" Remember-Me")]),t._v(" "),s("h2",{attrs:{id:"spring-boot-集成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-集成"}},[t._v("#")]),t._v(" Spring Boot 集成")]),t._v(" "),s("p",[s("code",[t._v("@EnableWebSecurity")]),t._v(" 和 "),s("code",[t._v("@Configuration")]),t._v(" 注解一起使用, 注解 "),s("code",[t._v("WebSecurityConfigurer")]),t._v(" 类型的类。")]),t._v(" "),s("p",[t._v("或者利用"),s("code",[t._v("@EnableWebSecurity")]),t._v("注解继承 "),s("code",[t._v("WebSecurityConfigurerAdapter")]),t._v(" 的类，这样就构成了 "),s("em",[t._v("Spring Security")]),t._v(" 的配置。")]),t._v(" "),s("ul",[s("li",[t._v("configure(WebSecurity)：通过重载该方法，可配置 Spring Security 的 Filter 链。")]),t._v(" "),s("li",[t._v("configure(HttpSecurity)：通过重载该方法，可配置如何通过拦截器保护请求。")])]),t._v(" "),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://spring.io/guides/topicals/spring-security-architecture",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Security Architecture"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://spring.io/guides/gs/securing-web/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Securing a Web Application"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);