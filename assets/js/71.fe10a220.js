(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{434:function(t,v,e){"use strict";e.r(v);var _=e(14),r=Object(_.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"spring-ioc-依赖来源"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#spring-ioc-依赖来源"}},[t._v("#")]),t._v(" Spring IoC 依赖来源")]),t._v(" "),v("h2",{attrs:{id:"依赖查找的来源"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#依赖查找的来源"}},[t._v("#")]),t._v(" 依赖查找的来源")]),t._v(" "),v("p",[t._v("查找来源")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("来源")]),t._v(" "),v("th",[t._v("配置元数据")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("Spring BeanDefinition")]),t._v(" "),v("td",[v("code",[t._v('<bean id ="user" class="xxx.xxx.User">')])])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[v("code",[t._v("@Bean public User user() {...}")])])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[v("code",[t._v("BeanDefinitionBuilder")])])]),t._v(" "),v("tr",[v("td",[t._v("单例对象")]),t._v(" "),v("td",[t._v("API 实现")])])])]),t._v(" "),v("p",[t._v("Spring 內建 BeanDefintion")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("Bean 名称")]),t._v(" "),v("th",[t._v("Bean 实例")]),t._v(" "),v("th",[t._v("使用场景")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("org.springframework.context.annotation.internalConfigurationAnnotationProcessor")]),t._v(" "),v("td",[t._v("ConfigurationClassPostProcessor 对象")]),t._v(" "),v("td",[t._v("处理 Spring 配置类")])]),t._v(" "),v("tr",[v("td",[t._v("org.springframework.context.annotation.internalAutowiredAnnotationProcessor")]),t._v(" "),v("td",[t._v("AutowiredAnnotationBeanPostProcessor 对象")]),t._v(" "),v("td",[t._v("处理 @Autowired 以及 @Value 注解")])]),t._v(" "),v("tr",[v("td",[t._v("org.springframework.context.annotation.internalCommonAnnotationProcessor")]),t._v(" "),v("td",[t._v("CommonAnnotationBeanPostProcessor 对象")]),t._v(" "),v("td",[t._v("（条件激活）处理 JSR-250 注解，如 @PostConstruct 等")])]),t._v(" "),v("tr",[v("td",[t._v("org.springframework.context.event.internalEventListenerProcessor")]),t._v(" "),v("td",[t._v("EventListenerMethodProcessor 对象")]),t._v(" "),v("td",[t._v("处理标注 @EventListener 的 Spring 事件监听方法")])])])]),t._v(" "),v("p",[t._v("Spring 內建单例对象")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("Bean 名称")]),t._v(" "),v("th",[t._v("Bean 实例")]),t._v(" "),v("th",[t._v("使用场景")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("environment")]),t._v(" "),v("td",[t._v("Environment 对象")]),t._v(" "),v("td",[t._v("外部化配置以及 Profiles")])]),t._v(" "),v("tr",[v("td",[t._v("systemProperties")]),t._v(" "),v("td",[t._v("java.util.Properties 对象")]),t._v(" "),v("td",[t._v("Java 系统属性")])]),t._v(" "),v("tr",[v("td",[t._v("systemEnvironment")]),t._v(" "),v("td",[t._v("java.util.Map 对象")]),t._v(" "),v("td",[t._v("操作系统环境变量")])]),t._v(" "),v("tr",[v("td",[t._v("messageSource")]),t._v(" "),v("td",[t._v("MessageSource 对象")]),t._v(" "),v("td",[t._v("国际化文案")])]),t._v(" "),v("tr",[v("td",[t._v("lifecycleProcessor")]),t._v(" "),v("td",[t._v("LifecycleProcessor 对象")]),t._v(" "),v("td",[t._v("Lifecycle Bean 处理器")])]),t._v(" "),v("tr",[v("td",[t._v("applicationEventMulticaster")]),t._v(" "),v("td",[t._v("ApplicationEventMulticaster 对象")]),t._v(" "),v("td",[t._v("Spring 事件广播器")])])])]),t._v(" "),v("h2",{attrs:{id:"依赖注入的来源"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入的来源"}},[t._v("#")]),t._v(" 依赖注入的来源")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("来源")]),t._v(" "),v("th",[t._v("配置元数据")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("Spring BeanDefinition")]),t._v(" "),v("td",[v("code",[t._v('<bean id ="user" class="xxx.xxx.User">')])])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[v("code",[t._v("@Bean public User user() {...}")])])]),t._v(" "),v("tr",[v("td"),t._v(" "),v("td",[v("code",[t._v("BeanDefinitionBuilder")])])]),t._v(" "),v("tr",[v("td",[t._v("单例对象")]),t._v(" "),v("td",[t._v("API 实现")])]),t._v(" "),v("tr",[v("td",[t._v("非 Spring 容器管理对象")]),t._v(" "),v("td")])])]),t._v(" "),v("h2",{attrs:{id:"spring-容器管理和游离对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#spring-容器管理和游离对象"}},[t._v("#")]),t._v(" Spring 容器管理和游离对象")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("来源")]),t._v(" "),v("th",[t._v("Spring Bean 对象")]),t._v(" "),v("th",[t._v("生命周期管理")]),t._v(" "),v("th",[t._v("配置元信息")]),t._v(" "),v("th",[t._v("使用场景")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("Spring BeanDefinition")]),t._v(" "),v("td",[t._v("是")]),t._v(" "),v("td",[t._v("是")]),t._v(" "),v("td",[t._v("有")]),t._v(" "),v("td",[t._v("依赖查找、依赖注入")])]),t._v(" "),v("tr",[v("td",[t._v("单体对象")]),t._v(" "),v("td",[t._v("是")]),t._v(" "),v("td",[t._v("否")]),t._v(" "),v("td",[t._v("无")]),t._v(" "),v("td",[t._v("依赖查找、依赖注入")])]),t._v(" "),v("tr",[v("td",[t._v("Resolvable Dependency")]),t._v(" "),v("td",[t._v("否")]),t._v(" "),v("td",[t._v("否")]),t._v(" "),v("td",[t._v("无")]),t._v(" "),v("td",[t._v("依赖注入")])])])]),t._v(" "),v("h2",{attrs:{id:"spring-beandefinition-作为依赖来源"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#spring-beandefinition-作为依赖来源"}},[t._v("#")]),t._v(" Spring BeanDefinition 作为依赖来源")]),t._v(" "),v("ul",[v("li",[t._v("元数据："),v("code",[t._v("BeanDefinition")])]),t._v(" "),v("li",[t._v("注册："),v("code",[t._v("BeanDefinitionRegistry#registerBeanDefinition")])]),t._v(" "),v("li",[t._v("类型：延迟和非延迟")]),t._v(" "),v("li",[t._v("顺序：Bean 生命周期顺序按照注册顺序")])]),t._v(" "),v("h2",{attrs:{id:"单例对象作为依赖来源"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#单例对象作为依赖来源"}},[t._v("#")]),t._v(" 单例对象作为依赖来源")]),t._v(" "),v("ul",[v("li",[t._v("要素\n"),v("ul",[v("li",[t._v("来源：外部普通 Java 对象（不一定是 POJO）")]),t._v(" "),v("li",[t._v("注册："),v("code",[t._v("SingletonBeanRegistry#registerSingleton")])])])]),t._v(" "),v("li",[t._v("限制\n"),v("ul",[v("li",[t._v("无生命周期管理")]),t._v(" "),v("li",[t._v("无法实现延迟初始化 Bean")])])])]),t._v(" "),v("h2",{attrs:{id:"非-spring-对象容器管理对象作为依赖来源"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#非-spring-对象容器管理对象作为依赖来源"}},[t._v("#")]),t._v(" 非 Spring 对象容器管理对象作为依赖来源")]),t._v(" "),v("ul",[v("li",[t._v("要素\n"),v("ul",[v("li",[t._v("注册："),v("code",[t._v("ConfigurableListableBeanFactory#registerResolvableDependency")])])])]),t._v(" "),v("li",[t._v("限制\n"),v("ul",[v("li",[t._v("无生命周期管理")]),t._v(" "),v("li",[t._v("无法实现延迟初始化 Bean")]),t._v(" "),v("li",[t._v("无法通过依赖查找")])])])]),t._v(" "),v("h2",{attrs:{id:"外部化配置作为依赖来源"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#外部化配置作为依赖来源"}},[t._v("#")]),t._v(" 外部化配置作为依赖来源")]),t._v(" "),v("ul",[v("li",[t._v("要素\n"),v("ul",[v("li",[t._v("类型：非常规 Spring 对象依赖来源")])])]),t._v(" "),v("li",[t._v("限制\n"),v("ul",[v("li",[t._v("无生命周期管理")]),t._v(" "),v("li",[t._v("无法实现延迟初始化 Bean")]),t._v(" "),v("li",[t._v("无法通过依赖查找")])])])]),t._v(" "),v("h2",{attrs:{id:"问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),v("p",[t._v("注入和查找的依赖来源是否相同？")]),t._v(" "),v("p",[t._v("否，依赖查找的来源仅限于 Spring "),v("code",[t._v("BeanDefinition")]),t._v(" 以及单例对象，而依赖注入的来源还包括 Resolvable Dependency 以及 "),v("code",[t._v("@Value")]),t._v(" 所标注的外部化配置")]),t._v(" "),v("p",[t._v("单例对象能在 IoC 容器启动后注册吗？")]),t._v(" "),v("p",[t._v("可以的，单例对象的注册与 "),v("code",[t._v("BeanDefinition")]),t._v(" 不同，"),v("code",[t._v("BeanDefinition")]),t._v(" 会被 "),v("code",[t._v("ConfigurableListableBeanFactory#freezeConfiguration()")]),t._v(" 方法影响，从而冻结注册，单例对象则没有这个限制。")]),t._v(" "),v("p",[t._v("Spring 依赖注入的来源有哪些？")]),t._v(" "),v("ul",[v("li",[t._v("Spring "),v("code",[t._v("BeanDefinition")])]),t._v(" "),v("li",[t._v("单例对象")]),t._v(" "),v("li",[t._v("Resolvable Dependency")]),t._v(" "),v("li",[v("code",[t._v("@Value")]),t._v(" 外部化配置")])]),t._v(" "),v("h2",{attrs:{id:"参考资料"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring 官方文档之 Core Technologies"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://time.geekbang.org/course/intro/265",target:"_blank",rel:"noopener noreferrer"}},[t._v("《小马哥讲 Spring 核心编程思想》"),v("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=r.exports}}]);